{"version":3,"sources":["tiff.js","renderers/volume/default/shaders/volume_renderer_vert.glsl","ui/Import.js","ui/InputVector.js","ui/ImportDialog.js","ui/LabeledProgressBar.js","ui/ImportProgress.js","workers/sdf-worker.js","workers/tiff-worker.js","renderers/volume/default/shaders/volume_renderer_frag.glsl","renderers/volume/default/shaders/post_vert.glsl","renderers/volume/default/shaders/post_frag.glsl","renderers/map/shaders/mip_vert.glsl","renderers/map/shaders/mip_frag.glsl","renderers/map/shaders/selection_vert.glsl","renderers/map/shaders/selection_frag.glsl","renderers/map/shaders/map_vert.glsl","renderers/map/shaders/map_frag.glsl","ui/Toolbar.js","ui/Sidebar.js","ui/Overlay.js","renderers/volume/volume_renderer.js","renderers/volume/default/volume_renderer_default.js","renderers/renderer.js","renderers/map/map_renderer.js","ui/Canvas.js","ui/Plots.js","ui/Views.js","ui/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Tiff","this","buffer","pixels","Uint8Array","width","height","depth","bits","file","a","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","readerEvent","target","result","onerror","_readerEvent","error","onabort","ifd","UTIF","Object","keys","length","Error","properties","t256","t257","t258","t277","console","log","i","sliceProperties","JSON","stringify","onError","onProgress","decodeTiffBuffer","Comlink","Worker","name","type","module","exports","Import","props","state","tiffProtein","tiffSegmentation","voxelSize","proteinProgress","segmentationProgress","sdfProgress","proteinError","segmentationError","sdfError","step","preImportError","handleImport","bind","handleClose","onProteinProgress","onSegmentationProgress","onProteinError","onSegmentationError","onSdfProgress","onSdfError","progress","setState","fileProtein","fileSegmentation","open","message","decode","reducer","accumulator","currentValue","Math","max","numCompartments","reduce","promises","Array","p","b","push","worker","sdf","all","sdfBuffers","hist","Float32Array","area","histLabels","onComplete","parseFloat","x","y","z","onAbort","show","onImport","onClose","Component","InputVector","handleChangeX","handleChangeY","handleChangeZ","e","onChange","value","InputGroup","className","Text","Form","Control","placeholder","ImportDialog","working","handleClickImport","handleChangeFileProtein","handleChangeFileSegmentation","handleChangeVoxelSize","files","formValid","alert","Alert","variant","Modal","onHide","Header","closeButton","Title","Body","Group","Label","Footer","Button","disabled","onClick","LabeledProgressBar","animated","ProgressBar","style","clipPath","label","striped","now","ImportProgress","backdrop","Toolbar","fullscreenIcon","fullscreen","ButtonToolbar","ButtonGroup","onToggleSidebar","onImportData","onToggleFullscreen","Sidebar","handleSelectCompartmet","handleChangeDisplaySegmentation","handleChangeDisplayProtein","index","onCompartmentSelection","onDisplaySegmentation","checked","onDisplayProtein","dropdownItems","Dropdown","Item","dropdownText","selection","Row","md","Col","Collapse","in","Card","Check","Input","displayProtein","displaySegmentation","Range","Toggle","Menu","Overlay","children","VolumeRenderer","texture","textures","vec","THREE","DefaultUp","canvas","mainView","mapView","renderer","VolumeRendererDefault","dom","camera","clientWidth","clientHeight","position","controls","OrbitControls","require","materialMarchVolume","glslVersion","uniforms","modelview","matrixWorldInverse","proj","projectionMatrix","resolution","volume","volumeSize","texDepth","isovalue","displayCompartments","projection","vertexShader","fragmentShader","side","transparent","materialCompose","texGrid","texVolume","sceneGrid","grid","rotateX","PI","add","onBeforeRender","scene","geometry","material","group","pos","updateMatrixWorld","sceneVolume","box","sceneCompose","cameraCompose","plane","quad","renderTargetVolume","renderTargetGrid","depthTexture","volumeDirty","addEventListener","window","resizeCallback","volumeTexture","sdfTextures","rect","getBoundingClientRect","right","left","bottom","top","innerHeight","setViewport","setScissor","setScissorTest","update","gl","getContext","setRenderTarget","clear","COLOR_BUFFER_BIT","render","dims","setSize","innerWidth","aspect","updateProjectionMatrix","geom","setAttribute","points","MapRenderer","onSelectionUpdated","materialProjection","materialSelection","lastPosition","depressed","materialMap","renderTargetSelection","renderTargetProjection","sceneProjection","sceneSelection","sceneMap","projectionDirty","selectionDirty","mouseMove","mouseDown","mouseUp","mouseOut","clientX","clientY","renderSelection","renderProjection","renderMap","readRenderTargetPixels","stats","Stats","showPanel","document","body","appendChild","volumeRenderer","mapRenderer","initCanvas","initMainView","initMapView","preserveDrawingBuffer","autoClearColor","init","animate","handleSelectionUpdated","setSelectionTexture","getSeletionTexture","setProjectionTexture","getProjectionTexture","requestAnimationFrame","begin","end","selectionUpdated","Canvas","canvasRef","useRef","useEffect","Renderer","current","ready","arrays","tex","format","minFilter","magFilter","unpackAlignment","setDistanceData","buffers","array","setProteinData","protein","size","setVolumeSize","setDisplayProtein","setDisplayCompartments","setIsovalue","compartmentIndex","setCompartmentIndex","ref","Plots","data","labels","labelsHistogram","datasets","backgroundColor","borderColor","globalHistogram","localHistogram","options","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","Views","mainRef","mapRef","useState","setMainView","setMapView","importPrompt","onClickImport","Main","showSidebar","showImport","bufferDims","proteinBuffer","handleShowImport","handleToggleFullscreen","handleToggleSidebar","handleAbortImport","handleCompleteImport","handleCompartmentSelection","handleDisplaySegmentation","handleDisplayProtein","exitFullscreen","webkitExitFullscreen","msExitFullscreen","elem","documentElement","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1cdc64c.chunk.js","sourcesContent":["import * as UTIF from 'utif';\n\nimport * as Comlink from 'comlink';\n\nclass Tiff {\n    constructor() {\n        this.buffer = null;\n        this.pixels = new Uint8Array();\n        this.width = 0;\n        this.height = 0;\n        this.depth = 0;\n        this.bits = 0;\n    }\n\n    async open(file) {\n        let buffer = await (() => {\n            return new Promise(function(resolve, reject) {\n                var reader = new FileReader();\n                reader.readAsArrayBuffer(file)\n            \n                reader.onload = readerEvent => {\n                    resolve(readerEvent.target.result);\n                }\n        \n                reader.onerror = _readerEvent => {\n                    reject(reader.error);\n                }\n        \n                reader.onabort = _readerEvent => {\n                    reject(\"FileReader was aborted!\");\n                }\n            });\n        })();\n\n        let ifd = UTIF.decode(buffer);\n        if (Object.keys(ifd[0]).length === 0) {\n            throw new Error(\"Could not decode TIFF file!\");\n        }\n\n        let properties = (({ t256, t257, t258, t277 }) => ({ t256, t257, t258, t277 }))(ifd[0]);\n    \n        console.log(properties.t277)\n\n        if (properties.t277[0] !== 1) {\n            throw new Error(\"Only grayscale images are supported.\");\n        }\n    \n        if (properties.t258[0] !== 8) {\n            throw new Error(\"Only images with bit depth 8 are supported.\");\n        }\n    \n        for (var i = 0; i < ifd.length; ++i) {\n            let sliceProperties = (({ t256, t257, t258, t277 }) => ({ t256, t257, t258, t277 }))(ifd[i]);\n    \n            if (JSON.stringify(properties) !== JSON.stringify(sliceProperties)) {\n                throw new Error(\"Slice \" + i + \" has incorrect dimensions or pixel depth.\");\n            }\n        }\n\n        this.buffer = buffer;\n        this.width = properties.t256[0];\n        this.height = properties.t257[0];\n        this.depth = ifd.length;\n        this.bits = properties.t258[0];\n    };\n\n    async decode(onError, onProgress) {\n        const decodeTiffBuffer = Comlink.wrap(new Worker('./workers/tiff-worker.js', {\n            name: 'tiff-worker',\n            type: 'module'\n          }));\n        this.pixels = await decodeTiffBuffer(this.buffer, Comlink.proxy(onError), Comlink.proxy(onProgress));\n    };\n}\n\nexport { Tiff };","module.exports = \"in vec4 position;\\nuniform mat4 modelview;\\nuniform mat4 proj;\\nuniform vec3 cameraPos;\\nout vec3 vOrigin;\\nout vec3 vDirection;\\n\\nvoid main() {\\n    vOrigin = vec3( inverse( modelview ) * vec4( 0.0, 0.0, 0.0, 1.0 ) ).xyz;\\n    vDirection = position.xyz - vOrigin;\\n    gl_Position = proj * modelview * position;\\n}\"","import React, { Component } from 'react'\n\nimport ImportDialog from './ImportDialog';\nimport ImportProgress from './ImportProgress';\n\nimport * as Comlink from 'comlink';\n\nimport { Tiff } from '../tiff';\n\nclass Import extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tiffProtein: \"\",\n            tiffSegmentation: \"\",\n            voxelSize: \"\",\n            proteinProgress: 0,\n            segmentationProgress: 0,\n            sdfProgress: 0,\n            proteinError: \"\",\n            segmentationError: \"\",\n            sdfError: \"\",\n            step: \"dialog\",\n            preImportError: \"\"\n        }\n\n        this.handleImport = this.handleImport.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.onProteinProgress = this.onProteinProgress.bind(this);\n        this.onSegmentationProgress = this.onSegmentationProgress.bind(this);\n        this.onProteinError = this.onProteinError.bind(this);\n        this.onSegmentationError = this.onSegmentationError.bind(this);\n        this.onSdfProgress = this.onSdfProgress.bind(this);\n        this.onSdfError = this.onSdfError.bind(this);\n    }\n\n    onProteinProgress(progress) {\n        this.setState({\n            proteinProgress: progress\n        })\n    }\n\n    onSegmentationProgress(progress) {\n        this.setState({\n            segmentationProgress: progress\n        })\n    }\n\n    onProteinError(error) {\n        this.setState({\n            proteinError: error\n        })\n    }\n\n    onSegmentationError(error) {\n        this.setState({\n            segmentationError: error\n        })\n    }\n\n    onSdfProgress(progress) {\n        this.setState({\n            sdfProgress: progress\n        })\n    }\n\n    onSdfError(error) {\n        this.setState({\n            sdfError: error\n        })\n    }\n\n    async handleImport(fileProtein, fileSegmentation, voxelSize) {\n        let tiffProtein = new Tiff();\n        let tiffSegmentation = new Tiff();\n    \n        try {\n          await tiffProtein.open(fileProtein);\n          await tiffSegmentation.open(fileSegmentation);\n        } catch (e) {\n          this.setState({\n            preImportError: e.message\n          });\n          return;\n        }\n    \n        if (tiffProtein.width !== tiffSegmentation.width || tiffProtein.height !== tiffSegmentation.height || tiffProtein.depth !== tiffSegmentation.depth) {\n          this.setState({\n            preImportError: \"Please make sure the protein and the segmentation data have the same dimensions.\"\n          });\n          return;\n        }\n\n        this.setState({\n            step: \"import\",\n            voxelSize: voxelSize,\n            tiffProtein: tiffProtein,\n            tiffSegmentation: tiffSegmentation,\n            segmentationProgress: 0,\n            proteinProgress: 0,\n            sdfProgress: 0,\n            segmentationError: \"\",\n            proteinError: \"\",\n            sdfError: \"\"\n        });\n        \n        // We can decode the TIFFs in parallel.\n        await tiffProtein.decode(this.onProteinError, this.onProteinProgress);\n        await tiffSegmentation.decode(this.onSegmentationError, this.onSegmentationProgress);\n        const reducer = (accumulator, currentValue) => Math.max(accumulator, currentValue);\n        var numCompartments = tiffSegmentation.pixels.reduce(reducer);\n\n        let promises = [];\n        let progress = new Array(numCompartments+1);\n\n        for (var i = 0; i < numCompartments+1; ++i) {\n            const target = i;\n            const onProgress = (p) => {\n                progress[target] = p * 100;\n                this.onSdfProgress(progress.reduce((a, b) => a + b, 0) / (numCompartments + 1));\n            }\n            promises.push(new Promise(function(resolve, reject) {\n                const worker = new Worker('../workers/sdf-worker.js', {\n                    name: 'sdf-worker',\n                    type: 'module'\n                });\n                const sdf = Comlink.wrap(worker);\n                let result = sdf(tiffSegmentation, voxelSize, target, Comlink.proxy(onProgress));\n                resolve(result);\n            }));\n        }\n\n        const sdfBuffers = await Promise.all(promises);\n        this.onSdfProgress(100);\n\n        // Compute global histogram.\n        const bitDepth = 8;\n        let hist = new Float32Array(2**bitDepth);\n        let area = new Float32Array(2**bitDepth);\n    \n        for (let i = 0; i < sdfBuffers[0].length; ++i) {\n            hist[sdfBuffers[0][i]] += tiffProtein.pixels[i];\n            area[sdfBuffers[0][i]] += 1.0;\n    \n        }\n    \n        for (let i = 0; i < hist.length; ++i) {\n            hist[i] = hist[i]/area[i];\n        }\n\n        let histLabels = [];\n        for (let i = 0; i < 256; ++i) {\n            histLabels.push(i / 10.0 - 5.0);\n        }\n    \n        this.setState({\n            step: \"dialog\"\n        });\n\n        this.props.onComplete(sdfBuffers, tiffProtein.pixels, [tiffProtein.width, tiffProtein.height, tiffProtein.depth],\n                              [parseFloat(voxelSize.x), parseFloat(voxelSize.y), parseFloat(voxelSize.z)],\n                              hist, histLabels);\n    }\n\n    handleClose() {\n        this.props.onAbort();\n    }\n\n    render() {\n        return (\n            <>\n                <ImportDialog\n                    show={this.state.step === \"dialog\" && this.props.show}\n                    error={this.state.preImportError}\n                    onImport={this.handleImport}\n                    onClose={this.handleClose}\n                />\n                <ImportProgress\n                    show={this.state.step === \"import\" && this.props.show}\n                    proteinProgress={this.state.proteinProgress}\n                    segmentationProgress={this.state.segmentationProgress}\n                    sdfProgress={this.state.sdfProgress}\n                    proteinError={this.state.proteinError}\n                    segmentationError={this.state.segmentationError}\n                    sdfError={this.state.sdfError}\n                />\n            </>\n        )\n    }\n}\n\nexport default Import","import React, {Component} from 'react'\n\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nclass InputVector extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n        this.handleChangeX = this.handleChangeX.bind(this);\n        this.handleChangeY = this.handleChangeY.bind(this);\n        this.handleChangeZ = this.handleChangeZ.bind(this);\n\t}\n\n    handleChangeX(e) {\n        this.props.onChange({\n            x: e.target.value,\n            y: this.props.value.y,\n            z: this.props.value.z\n        });\n    }\n\n    handleChangeY(e) {\n        this.props.onChange({\n            x: this.props.value.x,\n            y: e.target.value,\n            z: this.props.value.z\n        });\n    }\n\n    handleChangeZ(e) {\n        this.props.onChange({\n            x: this.props.value.x,\n            y: this.props.value.y,\n            z: e.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Voxel Size</InputGroup.Text>\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"x\"\n                    value={this.props.value.x}\n                    onChange={this.handleChangeX}\n                />\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"y\"\n                    value={this.props.value.y}\n                    onChange={this.handleChangeY}\n                />\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"z\"\n                    value={this.props.value.z}\n                    onChange={this.handleChangeZ}\n                />\n            </InputGroup>\n        )\n    }\n}\n\nexport default InputVector","import React, {Component} from 'react'\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nimport InputVector from './InputVector'\n\nclass ImportDialog extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\n    this.state = {\n      fileProtein: \"\",\n      fileSegmentation: \"\",\n      voxelSize: {x: \"\", y: \"\", z: \"\"},\n      working: false\n    }\n\n    this.handleClickImport = this.handleClickImport.bind(this);\n\n    this.handleChangeFileProtein = this.handleChangeFileProtein.bind(this);\n    this.handleChangeFileSegmentation = this.handleChangeFileSegmentation.bind(this);\n    this.handleChangeVoxelSize = this.handleChangeVoxelSize.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\t}\n\n  handleChangeFileProtein(e) {\n    this.setState({\n      fileProtein: e.target.files[0]\n    })\n  }\n\n  handleChangeFileSegmentation(e) {\n    this.setState({\n      fileSegmentation: e.target.files[0]\n    })\n  }\n\n  handleChangeVoxelSize(value) {\n    this.setState({\n      voxelSize: value\n    })\n  }\n\n  async handleClickImport(e) {\n    this.setState({\n      working: true\n    })\n\n    this.props.onImport(this.state.fileProtein, this.state.fileSegmentation, this.state.voxelSize);\n\n    this.setState({\n      working: false\n    })\n  }\n\n  handleClose(e) {\n    this.props.onClose();\n  }\n\n  render() {\n    let formValid;\n    if (this.state.fileProtein\n        && this.state.fileSegmentation\n        && this.state.voxelSize.x\n        && this.state.voxelSize.y\n        && this.state.voxelSize.z\n        && !this.state.working) formValid = true;\n    else formValid = false;\n\n    let alert;\n    if (this.props.error) {\n      alert = <Alert variant=\"danger\">{this.props.error}</Alert>\n    }\n\n    return (\n        <Modal show={this.props.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Import Data</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Protein Data</Form.Label>\n                    <Form.Control\n                      type=\"file\"\n                      onChange={this.handleChangeFileProtein}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Segmentation Data</Form.Label>\n                    <Form.Control\n                      type=\"file\"\n                      onChange={this.handleChangeFileSegmentation}\n                    />\n                </Form.Group>\n                <InputVector\n                  value={this.state.voxelSize}\n                  onChange={this.handleChangeVoxelSize}\n                />\n            </Form>\n            {alert}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"primary\"\n              disabled={!formValid}\n              onClick={this.handleClickImport}\n            >\n              Import\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    )\n  }\n}\n\nexport default ImportDialog","import React, {Component} from 'react';\n\nimport \"../App.css\";\n\nimport Alert from 'react-bootstrap/Alert';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass LabeledProgressBar extends Component {\n\trender() {\n\t\tlet variant = \"\"\n\t\tif (this.props.progress >= 100) variant = \"success\";\n\t\tif (this.props.error) variant = \"danger\";\n\n\t\tlet animated = (this.props.progress < 100 && !this.props.error);\n\n\t\tlet alert;\n\t\tif (this.props.error) {\n\t\t\talert = <Alert variant=\"danger\">{this.props.error}</Alert>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"labeled-progress-bar\">\n\t\t\t\t<ProgressBar>\n\t\t\t\t\t<div className=\"label-front\" style={{clipPath: `inset(0 ${100-this.props.progress}% 0 0)`}}>{this.props.label}</div>\n\t\t\t\t\t<div className=\"label-back\">{this.props.label}</div>\n\t\t\t\t\t<ProgressBar striped variant={variant} animated={animated} now={this.props.progress} />\n\t\t\t\t</ProgressBar>\n\t\t\t\t{alert}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LabeledProgressBar;","import React, {Component} from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\n\nimport LabeledProgressBar from './LabeledProgressBar';\n\nclass ImportProgress extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// TODO: Add all data here as state.\n\t\tthis.state = {\n\t\t\tproteinProgress: 0,\n\t\t\tsegmentationProgress: 0,\n\t\t\tsdfProgress: 0,\n\t\t\tproteinError: \"\",\n\t\t\tsegmentationError: \"\",\n\t\t\tsdfError: \"\"\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\n\t}\n  \n\tcomponentWillUnmount() {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal backdrop=\"static\" show={this.props.show}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>Importing Data...</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<div className=\"d-grid gap-3\">\n\t\t\t\t\t<LabeledProgressBar \n\t\t\t\t\t\tprogress={this.props.proteinProgress}\n\t\t\t\t\t\terror={this.props.proteinError}\n\t\t\t\t\t\tlabel=\"Decode Protein TIFF...\"\n\t\t\t\t\t/>\n\t\t\t\t\t<LabeledProgressBar \n\t\t\t\t\t\tprogress={this.props.segmentationProgress}\n\t\t\t\t\t\terror={this.props.segmentationError}\n\t\t\t\t\t\tlabel=\"Decode Segmentation TIFF...\"\n\t\t\t\t\t/>\n\t\t\t\t\t<LabeledProgressBar \n\t\t\t\t\t\tprogress={this.props.sdfProgress}\n\t\t\t\t\t\terror={this.props.sdfError}\n\t\t\t\t\t\tlabel=\"Compute Distance Fields...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nexport default ImportProgress","module.exports = __webpack_public_path__ + \"static/js/sdf-worker.d17a835f.chunk.worker.js\"","module.exports = __webpack_public_path__ + \"static/js/tiff-worker.a6adfe81.chunk.worker.js\"","module.exports = \"precision highp float;\\nprecision highp sampler3D;\\n\\nout vec4 FragColor;\\n\\nuniform sampler3D volume;\\nuniform sampler3D sdf;\\n\\nuniform sampler2D texDepth;\\n\\nuniform sampler2D selection;\\nuniform sampler2D projection;\\n\\nuniform mat4 modelview;\\nuniform mat4 proj;\\n\\nuniform vec3 volumeSize;\\nuniform vec2 resolution;\\n\\nuniform float isovalue;\\n\\nuniform bool displayProtein;\\nuniform bool displayCompartments;\\n\\nin vec3 vOrigin;\\nin vec3 vDirection;\\n\\nvec2 rayBoxDst(vec3 bmin, vec3 bmax, vec3 p, vec3 d) {\\n    vec3 t0 = (bmin - p) / d;\\n    vec3 t1 = (bmax - p) / d;\\n    vec3 tmin = min(t0, t1);\\n    vec3 tmax = max(t0, t1);\\n\\n    float dstA = max(max(tmin.x, tmin.y), tmin.z);\\n    float dstB = min(tmax.x, min(tmax.y, tmax.z));\\n\\n    float dstToBox = max(0.0, dstA);\\n    float dstInsideBox = max(0.0, dstB - dstToBox);\\n    return vec2(dstToBox, dstInsideBox);\\n}\\n\\n// https://github.com/kbinani/colormap-shaders/blob/master/shaders/glsl/MATLAB_summer.frag\\nvec3 colormap(float x) {\\n    return vec3(clamp(x, 0.0, 1.0), clamp(0.5 * x + 0.5, 0.0, 1.0), 0.4);\\n}\\n\\nvec3 matlab_spring(float x) {\\n    return vec3(1.0, clamp(x, 0.0, 1.0), clamp(1.0 - x, 0.0, 1.0));\\n}\\n\\n// Sample the protein channel, local coordinates.\\nfloat sampleProtein(vec3 p) {\\n    return texture(volume, p/volumeSize + 0.5).r;\\n}\\n\\nfloat sampleSdf(vec3 p) {\\n    return texture(sdf, p/volumeSize + 0.5).r * 255.0 / 10.0 - 5.0;;\\n}\\n\\nvoid calcNormalAndCurv(vec3 p, out vec3 normal, out float curv) {\\n    float h = 0.01; \\n    vec2 k = h * vec2(1., 0.);\\n\\n    float t1 = sampleSdf(p + volumeSize*k.xyy); float t2 = sampleSdf(p - volumeSize*k.xyy);\\n    float t3 = sampleSdf(p + volumeSize*k.yxy); float t4 = sampleSdf(p - volumeSize*k.yxy);\\n    float t5 = sampleSdf(p + volumeSize*k.yxx); float t6 = sampleSdf(p - volumeSize*k.yxx);\\n\\n    curv = (t1+t2+t3+t4+t5+t6-6.0*sampleSdf(p))/(h*h);\\n    normal = normalize(k.xyy * (t1-t2) + k.yxy * (t3-t4) + k.yyx * (t5-t6));\\n}\\n\\n\\nvoid main()\\n{\\n    float normalizedDepth = texture(texDepth, gl_FragCoord.xy / resolution).r;\\n    vec4 ndc = vec4(gl_FragCoord.xy / resolution * 2.0 - 1.0,\\n                    normalizedDepth * 2.0 - 1.0, 1.0f);\\n    vec4 vcoords = inverse(proj) * ndc;\\n    vcoords /= vcoords.w;\\n    float depth = -vcoords.z;\\n\\n    vec3 rayDir = normalize( vDirection );\\n    vec2 boxDst = rayBoxDst(-0.5 * volumeSize, 0.5 * volumeSize, vOrigin, rayDir);\\n\\n    // Render render isosurface\\n    vec4 surfaceColor = vec4(0.0f);\\n    if (displayCompartments) {\\n        vec3 rayPos = vOrigin + boxDst.x * rayDir;\\n        float dist = 0.0;\\n        while (dist < boxDst.y) {\\n            if (dist + boxDst.x > depth) break;\\n            // Simple sphere tracer.            \\n            float sdfVal = sampleSdf(rayPos);\\n            \\n            if (sdfVal < 0.01) {\\n                float curv;\\n                vec3 normal;\\n                calcNormalAndCurv(rayPos, normal, curv);\\n                float ldn = dot(normal, vec3(1.0, 0.0, 0.0));\\n                surfaceColor = mix(vec4(0.0, 0.0, 0.0, 1.0), vec4(colormap(abs(0.00001*curv)), 1.0), 0.5 + 0.5 * ldn);\\n                break;\\n            }\\n\\n            dist += sdfVal;\\n            rayPos += sdfVal * rayDir;\\n        }\\n        depth = min(depth, boxDst.x + dist);\\n    }\\n\\n    // Render volume.\\n    vec4 proteinColor = vec4(0.0f);\\n    if (displayProtein) {\\n        bool inProximity = false;\\n        vec3 rayPos = vOrigin + boxDst.x * rayDir;\\n\\n        float stepSize = 0.5;\\n        float dist = 0.0;\\n        while (dist < boxDst.y) {\\n            float sdfVal = sampleSdf(rayPos) - isovalue;\\n            \\n            if (!inProximity) {\\n                if (sdfVal < 0.01) {\\n                    inProximity = true;\\n                } else {\\n                    dist += sdfVal;\\n                    rayPos += sdfVal * rayDir;\\n                }\\n            } else {\\n                if (sdfVal > 0.01) {\\n                    inProximity = false;\\n                    dist += sdfVal;\\n                    rayPos += sdfVal * rayDir;\\n                } else {\\n                    float density = sampleProtein(rayPos);\\n                    vec3 color = colormap(density);\\n\\n                    vec3 uvw = rayPos / volumeSize + 0.5;\\n                    float distanceToMaximum = clamp(1.0 - abs(uvw.z - texture(projection, uvw.xy).g) / 0.025, 0.0, 1.0);\\n                    float selectionMask = texture(selection, uvw.xy).r;\\n\\n                    float highlight = distanceToMaximum * selectionMask;\\n                    color = mix(color, 3.0 * matlab_spring(density), highlight);\\n\\n                    proteinColor.rgb += density * (1.0 - proteinColor.a) * color;\\n                    proteinColor.a += density * (1.0 - proteinColor.a);\\n                    dist += stepSize;\\n                    rayPos += stepSize * rayDir;\\n                }\\n            }\\n            if (dist + boxDst.x > depth) break;\\n        }\\n    }\\n\\n    FragColor.rgb = mix(surfaceColor.rgb, proteinColor.rgb, proteinColor.a);\\n    FragColor.a = max(surfaceColor.a, proteinColor.a);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"\\nvarying vec2 vUv;\\n\\nuniform sampler2D texGrid;\\nuniform sampler2D texVolume;\\n\\nvoid main() {\\n    gl_FragColor = vec4(mix(texture(texGrid, vUv).rgb, texture(texVolume, vUv).rgb, texture(texVolume, vUv).a), 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nuniform highp sampler3D volume;\\nuniform highp sampler3D sdf;\\nuniform float isovalue;\\n\\nvoid main() {\\n    vec3 uv = vec3(vUv, 0.0);\\n    int col = textureSize(volume, 0).z;\\n\\n    // Maximum projection.\\n    float maxDensity = 0.0;\\n    float maxPos = 0.0;\\n    for (float i = 0.0; i < float(col); i += 1.0) {\\n        uv.z = i / float(col);\\n        float sdfVal = texture(sdf, uv).r * 255.0 / 10.0 - 5.0 - isovalue;\\n        if (sdfVal <= 0.01) {\\n            float density = texture(volume, uv).r;\\n            if (density > maxDensity) {\\n                maxDensity = density;\\n                maxPos = uv.z;\\n            }\\n        }\\n    }\\n\\n    gl_FragColor = vec4(maxDensity, maxPos, 0.0, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nuniform bool clear;\\nuniform vec2 lastPosition;\\nuniform vec2 position;\\nuniform bool depressed;\\n\\n// https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\\n{\\n    vec2 pa = p-a, ba = b-a;\\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\\n    return length( pa - ba*h );\\n}\\n\\nvoid main()\\n{\\n    if (clear) {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        return;\\n    }\\n\\n    if (sdSegment(vUv, position, lastPosition) < 0.015 && depressed) {\\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n    } else {\\n        discard;\\n    }\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nuniform highp sampler2D projection;\\nuniform highp sampler2D selection;\\n\\n// https://github.com/kbinani/colormap-shaders/blob/master/shaders/glsl/MATLAB_summer.frag\\nvec4 colormap(float x) {\\n    return vec4(clamp(x, 0.0, 1.0), clamp(0.5 * x + 0.5, 0.0, 1.0), 0.4, 1.0);\\n}\\n\\nvoid main() {\\n    vec4 c1 = colormap(texture(projection, vUv).r);\\n    vec4 c2 = texture(selection, vUv);\\n\\n    gl_FragColor = mix(0.5*c1, c1, c2.r);\\n}\"","import React, { Component } from 'react'\n\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n\nclass Toolbar extends Component {\n\trender() {\n\t\tlet fullscreenIcon;\n\t\tif (this.props.fullscreen) fullscreenIcon = \"bi-fullscreen-exit\";\n\t\telse fullscreenIcon = \"bi-arrows-fullscreen\";\n\t\treturn (\n\t\t\t<ButtonToolbar className=\"justify-content-between\">\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.props.onToggleSidebar}\n\t\t\t\t><i className=\"bi-tools\"></i></Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.props.onImportData}\n\t\t\t\t>Import Data</Button>\n\t\t\t</ButtonGroup>\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.props.onToggleFullscreen}\n\t\t\t\t><i className={fullscreenIcon}></i></Button>\n\t\t\t</ButtonGroup>\n\t\t\t</ButtonToolbar>\n\t\t)\n\t}\n}\n\nexport default Toolbar","import React, { Component } from 'react'\n\nimport Col from 'react-bootstrap/Col';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nclass Sidebar extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleSelectCompartmet = this.handleSelectCompartmet.bind(this);\n        this.handleChangeDisplaySegmentation = this.handleChangeDisplaySegmentation.bind(this);\n        this.handleChangeDisplayProtein = this.handleChangeDisplayProtein.bind(this);\n\t}\n\n    handleSelectCompartmet(index) {\n        this.props.onCompartmentSelection(index);\n    }\n\n    handleChangeDisplaySegmentation(e) {\n        this.props.onDisplaySegmentation(e.target.checked);\n    }\n\n    handleChangeDisplayProtein(e) {\n        this.props.onDisplayProtein(e.target.checked);\n    }\n\n\trender() {\n        let dropdownItems = [\n        <Dropdown.Item\n            onClick={() => this.handleSelectCompartmet(0)}\n        >All Compartments</Dropdown.Item>]\n        for (var i = 0; i < this.props.numCompartments-1; ++i) {\n            let index = i;\n            dropdownItems.push(\n            <Dropdown.Item\n                onClick={() => this.handleSelectCompartmet(index+1)}\n            >Compartment {index+1}</Dropdown.Item>);\n        }\n\n        let dropdownText = \"\";\n        if (this.props.numCompartments === 0) dropdownText = \"No Compartment Data\"\n        else if (this.props.selection === 0) dropdownText = \"All Compartments\";\n        else dropdownText = \"Compartment \" + this.props.selection;\n\t\treturn (\n            <Row md={3}>\n                <Col>\n                    <Collapse in={this.props.open}>\n                        <Card>\n                            <Card.Body>\n                                <Form>\n                                    <Form.Check className=\"form-switch\">\n                                        <Form.Check.Input\n                                            checked={this.props.displayProtein}\n                                            disabled={this.props.numCompartments===0}\n                                            onChange={this.handleChangeDisplayProtein}\n                                        />\n                                        <Form.Check.Label>Display Protein</Form.Check.Label>\n                                    </Form.Check>\n                                    <Form.Check className=\"form-switch\">\n                                        <Form.Check.Input\n                                            checked={this.props.displaySegmentation}\n                                            disabled={this.props.numCompartments===0}\n                                            onChange={this.handleChangeDisplaySegmentation}\n                                        />\n                                        <Form.Check.Label>Display Segmentation</Form.Check.Label>\n                                    </Form.Check>\n                                    <Form.Range\n                                        disabled={this.props.numCompartments===0}\n                                        \n                                    />\n                                    <Dropdown>\n                                        <Dropdown.Toggle disabled={this.props.numCompartments===0}>\n                                            {dropdownText}\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            {dropdownItems}\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Collapse>\n                </Col>\n            </Row>\n\t\t)\n\t}\n}\n\nexport default Sidebar;","const Overlay = (props) => {\n    return <div className=\"overlay d-grid gap-3\">\n        {props.children}\n    </div>\n}\n\nexport default Overlay","// \"Abstract\" class for the volume renderer.\n\nclass VolumeRenderer {\n\t// Renders the volume.\n\trender() { };\n\n\tsetVolumeSize(width, height, depth) { };\n\n\t// Set the protein data.\n\tsetProteinData(texture) { };\n\n\tsetDistanceData(textures) { };\n\n\tsetIsovalue(value) { };\n\n\tsetCompartmentIndex(value) { };\n\t\n\tsetDisplayCompartments(value) { };\n\n\tsetDisplayProtein(value) { };\n\n\tresizeCallback() { };\n\t\n\tsetSkeleton(vec) { };\n\n\tselectionUpdated() { };\n}\n\nexport { VolumeRenderer };","import { VolumeRenderer } from '../volume_renderer.js'\n\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1);\n\nclass VolumeRendererDefault extends VolumeRenderer {\n\tvolumeTexture\n\tsdfTextures\n\n\tdom;\n\trenderer;\n\n\tvolumeSize;\n\n\trenderTargetGrid;\n\trenderTargetVolume;\n\n\tcamera;\n\tcontrols;\n\n\tcameraCompose;\n\n\tbox;\n\tgrid;\n\n\tmaterialMarchVolume;\n\tmaterialCompose;\n\n\tsceneGrid;\n\tsceneVolume;\n\tsceneCompose;\n\n\tvolumeDirty;\n\n\tconstructor(renderer, dom) {\n\t\tsuper();\n\t\tconsole.log(dom);\n\t\tthis.dom = dom;\n\t\tthis.renderer = renderer;\n\n\t\tthis.camera = new THREE.PerspectiveCamera( 75, dom.clientWidth/dom.clientHeight, 0.1, 5000 );\n\t\tthis.camera.position.z = 5;\n\n\t\tthis.controls = new OrbitControls(this.camera, dom);\n\n\t\tconsole.log(require('./shaders/volume_renderer_vert.glsl'));\n\n\t\tthis.materialMarchVolume = new THREE.RawShaderMaterial( {\n\t\t\tglslVersion: THREE.GLSL3,\n\t\t\tuniforms: {\n\t\t\t\tmodelview: { value: this.camera.matrixWorldInverse },\n\t\t\t\tproj: {value: this.camera.projectionMatrix },\n\t\t\t\tresolution: { value: new THREE.Vector2(0, 0) },\n\t\t\t\tvolume: { value: null },\n\t\t\t\tvolumeSize: { value: null },\n\t\t\t\ttexDepth: { value: null },\n\t\t\t\tsdf: { value: null },\n\t\t\t\tisovalue: { value: null },\n\t\t\t\tdisplayProtein: { value: false },\n\t\t\t\tdisplayCompartments: { value: false },\n\t\t\t\tselection: { value: false },\n\t\t\t\tprojection: { value: false }\n\t\t\t},\n\t\t\tvertexShader: require('./shaders/volume_renderer_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/volume_renderer_frag.glsl'),\n\t\t\tside: THREE.BackSide,\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.materialCompose = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/post_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/post_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\ttexGrid: { value: null },\n\t\t\t\ttexVolume: { value: null }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tthis.sceneGrid = new THREE.Scene();\n\t\tconst size = 10;\n\t\tconst divisions = 10;\n\t\tthis.grid = new THREE.GridHelper( size, divisions );\n\t\tthis.grid.rotateX(0.5*Math.PI);\n\t\tthis.sceneGrid.add(this.grid);\n\t\t\n\t\tthis.grid.onBeforeRender = ( renderer, scene, camera, geometry, material, group ) => {\n\t\t\tvar pos = this.controls.target;\n\t\t\tthis.grid.position.x = pos.x;\n\t\t\tthis.grid.position.y = pos.y;\n\t\t\tthis.grid.position.z = pos.z;\n\t\t\tthis.grid.updateMatrixWorld();\n\t\t};\n\n\t\tconst geometry = new THREE.BoxGeometry();\n\t\tthis.sceneVolume = new THREE.Scene();\n\t\tthis.box = new THREE.Mesh(geometry, this.materialMarchVolume)\n\t\tthis.sceneVolume.add(this.box);\n\n\t\tthis.sceneCompose = new THREE.Scene();\n\t\tthis.cameraCompose = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialCompose);\n\t\tthis.sceneCompose.add(quad);\n\n\t\tthis.renderTargetVolume = new THREE.WebGLRenderTarget(0, 0);\n\t\tthis.renderTargetGrid = new THREE.WebGLRenderTarget(0, 0);\n\t\tthis.renderTargetGrid.depthTexture = new THREE.DepthTexture();\n\n\t\t\n\t\tthis.materialMarchVolume.uniforms.texDepth.value = this.renderTargetGrid.depthTexture;\n\t\tthis.materialCompose.uniforms.texGrid.value = this.renderTargetGrid.texture;\n\t\tthis.materialCompose.uniforms.texVolume.value = this.renderTargetVolume.texture;\n\n\t\tthis.volumeDirty = true;\n\n\t\tthis.controls.addEventListener('change', () => {\n\t\t\tthis.volumeDirty = true;\n\t\t} );\n\t\t\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.resizeCallback();\n\t\t});\n\t\tthis.resizeCallback();\n\t};\n\n\t// Renders the volume.\n\trender() {\n\t\tif (!this.volumeTexture) return;\n\t\tif (!this.sdfTextures) return;\n\t\tif (!this.volumeDirty) return;\n\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst left   = rect.left;\n\t\tconst bottom = window.innerHeight - rect.bottom;\n\n\t\tthis.renderer.setViewport(left, bottom, width, height);\n\t\tthis.renderer.setScissor(left, bottom, width, height);\n\t\tthis.renderer.setScissorTest(true);\n\t\t\n\t\tthis.controls.update();\n\n\t\tlet gl = this.renderer.getContext();\n\t\tthis.renderer.setRenderTarget(this.renderTargetGrid);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneGrid, this.camera);\n\n\t\tthis.renderer.setRenderTarget(this.renderTargetVolume);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneVolume, this.camera);\n\n\t\tthis.renderer.setRenderTarget(null);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneCompose, this.cameraCompose);\n\n\t\tthis.volumeDirty = false;\n\t};\n\n\tselectionUpdated() {\n\t\tthis.volumeDirty = true;\n\t}\n\n\tsetVolumeSize(width, height, depth) { \n\t\tthis.volumeSize = new THREE.Vector3(width, height, depth);\n\t\tthis.box.geometry = new THREE.BoxGeometry(this.volumeSize.x, this.volumeSize.y, this.volumeSize.z);\n\t\tthis.materialMarchVolume.uniforms.volumeSize.value = this.volumeSize;\n\t\tthis.volumeDirty = true;\n\t };\n\n\t// Set the protein data.\n\tsetProteinData(texture) {\n\t\tthis.volumeTexture = texture;\n\t\tthis.materialMarchVolume.uniforms.volume.value = this.volumeTexture;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetDistanceData(textures, dims) {\n\t\tthis.sdfTextures = textures;\n\t\tthis.materialMarchVolume.uniforms.sdf.value = this.sdfTextures[0];\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetIsovalue(value) {\n\t\tthis.materialMarchVolume.uniforms.isovalue.value = value;\n\t\tthis.volumeDirty = true;\n\t}\n\n\tsetCompartmentIndex(value) {\n\t\tthis.materialMarchVolume.uniforms.sdf.value = this.sdfTextures[value];\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetDisplayCompartments(value) {\n\t\tthis.materialMarchVolume.uniforms.displayCompartments.value = value;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetDisplayProtein(value) {\n\t\tthis.materialMarchVolume.uniforms.displayProtein.value = value;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetSelectionTexture(texture) {\n\t\tthis.materialMarchVolume.uniforms.selection.value = texture;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetProjectionTexture(texture) {\n\t\tthis.materialMarchVolume.uniforms.projection.value = texture;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tresizeCallback() {\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\t//const left   = rect.left;\n\t\t//const bottom = window.innerHeight - rect.bottom;\n\t\t\n\t\tthis.camera.aspect = width/height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.renderTargetVolume.setSize(width, height);\n\t\tthis.renderTargetGrid.setSize(width, height);\n\t\tthis.materialMarchVolume.uniforms.resolution.value = new THREE.Vector2(width, height);\n\n\t\tthis.renderTargetGrid.depthTexture = new THREE.DepthTexture();\n\t\tthis.materialMarchVolume.uniforms.texDepth.value = this.renderTargetGrid.depthTexture;\n\n\t\tthis.volumeDirty = true;\n\t}\n\n\tsetSkeleton(vec) {\n\t\tvar geom = new THREE.BufferGeometry();\n\n\t\tgeom.setAttribute( 'position', new THREE.BufferAttribute( vec, 3 ) );\n\n\t\tvar points = new THREE.Points(geom);\n\n\t\tpoints.position.x = -0.5*this.volumeSize.x;\n\t\tpoints.position.y = -0.5*this.volumeSize.y;\n\t\tpoints.position.z = -0.5*this.volumeSize.z;\n\n\t\tthis.sceneGrid.add(points);\n\t}\n}\n\nexport { VolumeRendererDefault };","import * as THREE from 'three';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n//import { VolumeRendererReprojected } from './volume/reprojected/volume_renderer_reprojected.js'\nimport { VolumeRendererDefault} from './volume/default/volume_renderer_default.js'\nimport { MapRenderer } from \"./map/map_renderer.js\"\n\nvar stats = new Stats();\nstats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\ndocument.body.appendChild( stats.dom );\n\nvar canvas;\nvar mainView;\nvar mapView;\n\nvar renderer;\n\nvar volumeRenderer = null;\nvar mapRenderer = null;\n// Configure coordinate system to use Z as up.\n\nasync function main(initCanvas, initMainView, initMapView) {\n\tcanvas = initCanvas;\n\tmainView = initMainView;\n\tmapView = initMapView;\n\trenderer = new THREE.WebGLRenderer({canvas: canvas, preserveDrawingBuffer: true});\n\trenderer.autoClearColor = false;\n\tawait init();\n\tanimate();\n}\n\nfunction setVolumeSize(size) {\n\tvolumeRenderer.setVolumeSize(size[0], size[1], size[2]);\n}\n\nfunction setProteinData(array, dims) {\n\tconst texture = new THREE.DataTexture3D(array, dims[0], dims[1], dims[2]);\n\ttexture.format = THREE.RedFormat;\n\ttexture.minFilter = THREE.LinearFilter;\n\ttexture.magFilter = THREE.LinearFilter;\n\ttexture.unpackAlignment = 1;\n\t\n\tvolumeRenderer.setProteinData(texture);\n\tmapRenderer.setProteinData(texture);\n}\n\nfunction setDistanceFieldData(arrays, dims) {\n\tlet textures = [];\n\tfor (var i = 0; i < arrays.length; ++i) {\n\t\tconst tex = new THREE.DataTexture3D(arrays[i], dims[0], dims[1], dims[2]);\n\t\ttex.format = THREE.RedFormat;\n\t\ttex.minFilter = THREE.LinearFilter;\n\t\ttex.magFilter = THREE.LinearFilter;\n\t\ttex.unpackAlignment = 1;\n\n\t\ttextures.push(tex);\n\t}\n\tvolumeRenderer.setDistanceData(textures);\n\tmapRenderer.setDistanceData(textures);\n}\n\nasync function init() {\n\tvolumeRenderer = new VolumeRendererDefault(renderer, mainView);\n\tmapRenderer = new MapRenderer(renderer, mapView, handleSelectionUpdated);\n\n\tvolumeRenderer.setSelectionTexture(mapRenderer.getSeletionTexture());\n\tvolumeRenderer.setProjectionTexture(mapRenderer.getProjectionTexture());\n}\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n\tstats.begin();\n\n\tvolumeRenderer.render();\n\tmapRenderer.render();\n\n\tstats.end();\n}\n\nfunction handleSelectionUpdated() {\n\tconsole.log(\"UUUPS\");\n\tvolumeRenderer.selectionUpdated();\n}\n\nfunction setIsovalue(value) {\n\tvolumeRenderer.setIsovalue(value);\n\tmapRenderer.setIsovalue(value);\n}\n\nfunction setDisplayProtein(value) {\n\tvolumeRenderer.setDisplayProtein(value);\n}\n\nfunction setDisplayCompartment(value) {\n\tvolumeRenderer.setDisplayCompartments(value);\n}\n\nfunction setCompartmentIndex(index) {\n\tvolumeRenderer.setCompartmentIndex(index);\n\tmapRenderer.setCompartmentIndex(index);\n}\n\nfunction setSkeleton(vec) {\n\tvolumeRenderer.setSkeleton(vec);\n}\n\nfunction deleteSelection() {\n\tmapRenderer.deleteSelection();\n}\n\nfunction getMapSelectionPixels() {\n\treturn mapRenderer.getSelectionPixels();\n}\n\nfunction getMapProjectionPixels() {\n\treturn mapRenderer.getProjectionPixels();\n}\n\nexport { main, setDistanceFieldData, setProteinData, setIsovalue, setDisplayProtein, setDisplayCompartment, setCompartmentIndex, setVolumeSize, deleteSelection, setSkeleton, getMapSelectionPixels, getMapProjectionPixels};","import * as THREE from 'three';\n\nclass MapRenderer {\n    dom;\n    renderer;\n\n    camera;\n\n    sceneSelection;\n    materialSelection;\n\n\tsceneProjection;\n\tmaterialProjection;\n\n\tsceneMap;\n\tmaterialMap;\n\n\tvolumeTexture;\n\tsdfTextures;\n\n\trenderTargetSelection;\n\trenderTargetProjection;\n\n\tprojectionDirty;\n\tselectionDirty;\n\n\tconstructor(renderer, dom, onSelectionUpdated) {\n\t\tthis.dom = dom;\n\t\tthis.renderer = renderer;\n\n\t\tthis.onSelectionUpdated = onSelectionUpdated;\n\n        this.materialProjection = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/mip_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/mip_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\tvolume: { value: null },\n\t\t\t\tsdf: { value: null },\n\t\t\t\tisovalue: { value: null }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.materialSelection = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/selection_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/selection_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\tclear: { value: true },\n\t\t\t\tlastPosition: { value: new THREE.Vector2(0.0, 0.0) },\n\t\t\t\tposition: { value: new THREE.Vector2(0.0, 0.0) },\n\t\t\t\tdepressed: { value: false }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.materialMap = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/map_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/map_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\tselection: { value: null },\n\t\t\t\tprojection: { value: null }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.renderTargetSelection = new THREE.WebGLRenderTarget(1024, 1024);\n\t\tthis.renderTargetProjection = new THREE.WebGLRenderTarget(1024, 1024);\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t{\n\t\tthis.sceneProjection = new THREE.Scene();\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialProjection);\n\t\tthis.sceneProjection.add(quad);\n\t\t}\n\n\t\t{\n\t\tthis.sceneSelection = new THREE.Scene();\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialSelection);\n\t\tthis.sceneSelection.add(quad);\n\t\t}\n\n\t\t{\n\t\tthis.sceneMap = new THREE.Scene();\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialMap);\n\t\tthis.sceneMap.add(quad);\n\t\t}\n\n\t\tthis.materialMap.uniforms.projection.value = this.renderTargetProjection.texture;\n\t\tthis.materialMap.uniforms.selection.value = this.renderTargetSelection.texture;\n\n\t\tthis.projectionDirty = false;\n\t\tthis.selectionDirty = false;\n\n\t\tthis.dom.addEventListener('mousemove', e => { this.mouseMove(e); });\n\t\tthis.dom.addEventListener('mousedown', e => { this.mouseDown(e);});\n\t\tthis.dom.addEventListener('mouseup', e => { this.mouseUp(e);});\n\t\tthis.dom.addEventListener('mouseout', e => { this.mouseOut(e);});\n\t\t\t\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.resizeCallback();\n\t\t});\n\t\tthis.resizeCallback();\n    };\n\n\tmouseDown(e) {\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\tconst x = (e.clientX - rect.left) / (rect.right - rect.left); //x position within the element.\n\t\tconst y = 1.0 - (e.clientY - rect.top) / (rect.bottom - rect.top); //y position within the element.\n\t\tthis.materialSelection.uniforms.position.value = new THREE.Vector2(x, y);\n\t\tthis.materialSelection.uniforms.lastPosition.value = this.materialSelection.uniforms.position.value;\n\t\tthis.materialSelection.uniforms.depressed.value = true;\n\t\tthis.selectionDirty = true;\n\t}\n\n\tmouseMove(e) {\n\t\tif (this.materialSelection.uniforms.depressed.value) {\n\t\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\tconst x = (e.clientX - rect.left) / (rect.right - rect.left); //x position within the element.\n\t\t\tconst y = 1.0 - (e.clientY - rect.top) / (rect.bottom - rect.top); //y position within the element.\n\t\t\tthis.materialSelection.uniforms.lastPosition.value = this.materialSelection.uniforms.position.value;\n\t\t\tthis.materialSelection.uniforms.position.value = new THREE.Vector2(x, y);\n\t\t\tthis.selectionDirty = true;\n\t\t}\n\t}\n\n\tmouseOut(e) {\n\t\tthis.materialSelection.uniforms.depressed.value = false;\n\t}\n\n\tmouseUp(e) {\n\t\tthis.materialSelection.uniforms.depressed.value = false;\n\t}\n\n\trenderProjection() {\n\t\tthis.renderer.setViewport(0, 0, 1024, 1024);\n\t\tthis.renderer.setScissorTest(false);\n\t\tthis.renderer.setRenderTarget(this.renderTargetProjection);\n\t\tthis.renderer.render(this.sceneProjection, this.camera);\n\t\tthis.projectionDirty = false;\n\t}\n\n\trenderSelection() {\n\t\tthis.renderer.setViewport(0, 0, 1024, 1024);\n\t\tthis.renderer.setScissorTest(false);\n\t\tthis.renderer.setRenderTarget(this.renderTargetSelection);\n\t\tthis.renderer.render(this.sceneSelection, this.camera);\n\t\tif (this.materialSelection.uniforms.clear.value) {\n\t\t\tthis.materialSelection.uniforms.clear.value = false;\n\t\t}\n\t\tconsole.log(\"HEY\")\n\t\tthis.onSelectionUpdated();\n\t\tthis.selectionDirty = false;\n\t\t//$(document).trigger(\"selectionUpdated\");\n\t}\n\n\trenderMap() {\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst left   = rect.left;\n\t\tconst bottom = window.innerHeight - rect.bottom;\n\t\t\n\t\tthis.renderer.setViewport(left, bottom, width, height);\n\t\tthis.renderer.setScissor(left, bottom, width, height);\n\t\tthis.renderer.setScissorTest(true);\n\n\t\tthis.renderer.setRenderTarget(null);\n\t\tthis.renderer.render(this.sceneMap, this.camera);\n\t}\n\n\t// Renders the volume.\n\trender() {\n\t\tif (this.selectionDirty) this.renderSelection();\n\t\tif (this.projectionDirty) this.renderProjection();\n\n\t\tthis.renderMap();\n\t};\n\n\tsetVolumeSize(width, height, depth) { };\n\n\t// Set the protein data.\n\tsetProteinData(texture) {\n\t\tthis.volumeTexture = texture;\n\t\tthis.materialProjection.uniforms.volume.value = this.volumeTexture;\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetDistanceData(textures) {\n\t\tthis.sdfTextures = textures;\n\t\tthis.materialProjection.uniforms.sdf.value = this.sdfTextures[0];\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetIsovalue(value) {\n\t\tthis.materialProjection.uniforms.isovalue.value = value;\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetCompartmentIndex(value) {\n\t\tthis.materialProjection.uniforms.sdf.value = this.sdfTextures[value];\n\t\tthis.projectionDirty = true;\n\t};\n\n\tgetSeletionTexture() {\n\t\treturn this.renderTargetSelection.texture;\n\t};\n\n\tgetSelectionPixels() {\n\t\tvar pixels = {\n\t\t\twidth: this.renderTargetSelection.width,\n\t\t\theight: this.renderTargetSelection.height,\n\t\t\tbuffer: new Uint8Array(this.renderTargetSelection.width*this.renderTargetSelection.width*4)\n\t\t}\n\t\tthis.renderer.readRenderTargetPixels(this.renderTargetSelection, 0, 0, pixels.width, pixels.height, pixels.buffer);\n\t\treturn pixels;\n\t};\n\n\tgetProjectionPixels() {\n\t\tvar pixels = {\n\t\t\twidth: this.renderTargetProjection.width,\n\t\t\theight: this.renderTargetProjection.height,\n\t\t\tbuffer: new Uint8Array(this.renderTargetProjection.width*this.renderTargetProjection.width*4)\n\t\t}\n\t\tthis.renderer.readRenderTargetPixels(this.renderTargetProjection, 0, 0, pixels.width, pixels.height, pixels.buffer);\n\t\treturn pixels;\n\t}\n\n\tgetProjectionTexture() {\n\t\treturn this.renderTargetProjection.texture;\n\t}\n\n\tdeleteSelection() {\n\t\tthis.materialSelection.uniforms.clear.value = true;\n\t\tthis.selectionDirty = true;\n\t}\n\n\tresizeCallback() {\n\t\t/*this.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst left   = rect.left;\n\t\tconst bottom = window.innerHeight - rect.bottom;\n\t\t\n\t\tthis.camera.aspect = width/height;\n\t\tthis.camera.updateProjectionMatrix();*/\n\t};\n}\n\nexport { MapRenderer };","import React, { useRef, useEffect } from 'react'\n\nimport * as Renderer from '../renderers/renderer.js'\n\nconst Canvas = props => {\n\tconst canvasRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (props.mainView && props.mapView) {\n\t\t\tRenderer.main(canvasRef.current, props.mainView, props.mapView);\n\t\t}\n\t}, [props.mainView, props.mapView])\n\n\tuseEffect(() => {\n\t\tif (props.ready) {\n\t\t\tRenderer.setDistanceFieldData(props.sdf.buffers, props.sdf.dims);\n\t\t}\n\t}, [props.sdf, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready) {\n\t\t\tRenderer.setProteinData(props.protein.buffer, props.protein.dims);\n\t\t}\n\t}, [props.protein, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready) {\n\t\t\tRenderer.setVolumeSize(props.volumeSize);\n\t\t}\n\t}, [props.volumeSize, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready) {\n\t\t\tRenderer.setDisplayProtein(props.displayProtein);\n\t\t}\n\t}, [props.displayProtein, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready) {\n\t\t\tRenderer.setDisplayCompartment(props.displaySegmentation);\n\t\t}\n\t}, [props.displaySegmentation, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.isovalue) {\n\t\t\tRenderer.setIsovalue(props.isovalue);\n\t\t}\n\t}, [props.isovalue, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready) {\n\t\t\tRenderer.setCompartmentIndex(props.compartmentIndex);\n\t\t}\n\t}, [props.compartmentIndex, props.ready])\n\n\treturn (\n\t\t<canvas className=\"renderer\" ref={canvasRef} {...props} />\n\t);\n}\n\nexport default Canvas","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst Plots = props => {\n    const data = {\n        labels: props.labelsHistogram,\n        datasets: [{\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgb(255, 99, 132)',\n            data: props.globalHistogram,\n            label: 'Global Histogram',\n        },\n        {\n            backgroundColor: 'rgb(0, 255, 132)',\n            borderColor: 'rgb(0, 255, 132)',\n            data: props.localHistogram,\n            label: 'Local Histogram',\n        }]\n    };\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n        maintainAspectRatio: false\n    };\n\n    return (\n        <>\n            <Bar\n                className=\"plots\"\n                data={data}\n                options={options}\n            />\n        </>\n    );\n};\n\nexport default Plots;","import React, { useState, useRef, useEffect } from 'react'\n\nimport Button from 'react-bootstrap/Button'\n\nimport Canvas from './Canvas';\nimport Plots from './Plots'\n\nconst Views= props => {\n    const mainRef = useRef(null);\n    const mapRef = useRef(null);\n\n    const [mainView, setMainView] = useState();\n    const [mapView, setMapView] = useState();\n\n    useEffect(() => {\n        setMainView(mainRef.current);\n        setMapView(mapRef.current);\n    }, []);\n\n    const handleClickImport = () => {\n        props.onClickImport();\n    }\n\n    let importPrompt;\n    if (!props.ready) importPrompt = (\n        <div className=\"text-secondary h-100 d-flex justify-content-center align-items-center\">\n            <Button\n                variant=\"primary\"\n                size=\"lg\"\n                onClick={handleClickImport}\n            >\n                <i className=\"bi-plus-square\"></i>&nbsp;&nbsp;Import Data\n            </Button>\n        </div>\n    );\n    return(\n        <>\n        <Canvas\n            mainView={mainView}\n            mapView={mapView}\n            sdf={props.sdf}\n            protein={props.protein}\n            volumeSize={props.volumeSize}\n            displayProtein={props.displayProtein}\n            displaySegmentation={props.displaySegmentation}\n            isovalue={props.isovalue}\n            compartmentIndex={props.compartmentIndex}\n            ready={props.ready}\n        />\n        <div className=\"views d-flex flex-col\">\n            <div className=\"flex-fill d-flex flex-row\">\n                <div ref={mainRef} className=\"flex-fill\">\n                    {importPrompt}\n                </div>\n                <div className=\"v-divider\"></div>\n                <div className=\"flex-fill d-flex flex-column\">\n                    <div ref={mapRef} className=\"flex-fill\"></div>\n                    <div className=\"h-divider\"></div>\n                    <div className=\"flex-fill\">\n                        <Plots\n                            localHistogram={props.localHistogram}\n                            globalHistogram={props.globalHistogram}\n                            labelsHistogram={props.labelsHistogram}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>)\n    ;\n}\n\nexport default Views","import React, { Component } from 'react'\n\nimport Import from './Import'\nimport Toolbar from './Toolbar';\nimport Sidebar from './Sidebar';\nimport Overlay from './Overlay';\nimport Views from './Views'\n\nclass Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfullscreen: false,\n\t\t\tshowSidebar: false,\n\t\t\tshowImport: false,\n\t\t\tvoxelSize: [0, 0, 0],\n\t\t\tbufferDims: [0, 0, 0],\n\t\t\tsdfBuffers: [],\n\t\t\tproteinBuffer: \"\",\n\t\t\tready: false,\n\t\t\tcompartmentIndex: 0,\n\t\t\tdisplaySegmentation: true,\n\t\t\tdisplayProtein: true,\n\t\t\tglobalHistogram: [],\n\t\t\tlabelsHistogram: [],\n\t\t\tlocalHistogram: []\n\t\t}\n\t\t\n\t\tthis.handleShowImport = this.handleShowImport.bind(this);\n\t\tthis.handleToggleFullscreen = this.handleToggleFullscreen.bind(this);\n\t\tthis.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n\t\tthis.handleAbortImport = this.handleAbortImport.bind(this);\n\t\tthis.handleCompleteImport = this.handleCompleteImport.bind(this);\n\t\tthis.handleCompartmentSelection = this.handleCompartmentSelection.bind(this);\n\t\tthis.handleDisplaySegmentation = this.handleDisplaySegmentation.bind(this);\n\t\tthis.handleDisplayProtein = this.handleDisplayProtein.bind(this);\n\t}\n\n\thandleShowImport() {\n\t\tthis.setState({\n\t\t\tshowImport: true\n\t\t});\n\t}\n\n\thandleAbortImport() {\n\t\tthis.setState({\n\t\t\tshowImport: false\n\t\t});\n\t}\n\n\thandleCompleteImport(sdfBuffers, proteinBuffer, bufferDims, voxelSize, hist, histLabels) {\n\t\tthis.setState({\n\t\t\tsdfBuffers: sdfBuffers,\n\t\t\tproteinBuffer: proteinBuffer,\n\t\t\tbufferDims: bufferDims,\n\t\t\tvoxelSize: voxelSize,\n\t\t\tshowImport: false,\n\t\t\tready: true,\n\t\t\tglobalHistogram: hist,\n\t\t\tlabelsHistogram: histLabels\n\t\t})\n\t}\n\n\thandleToggleFullscreen() {\n\t\tif (!this.state.fullscreen) {\n\t\t\tlet elem = document.documentElement;\n\t\t\tif (elem.requestFullscreen) {\n\t\t\t\telem.requestFullscreen();\n\t\t\t} else if (elem.webkitRequestFullscreen) {\n\t\t\t\telem.webkitRequestFullscreen();\n\t\t\t} else if (elem.msRequestFullscreen) {\n\t\t\t\telem.msRequestFullscreen();\n\t\t\t}\n\t\t} else {\n\t\t\tif (document.exitFullscreen) {\n\t\t\t\tdocument.exitFullscreen();\n\t\t\t} else if (document.webkitExitFullscreen) {\n\t\t\t\tdocument.webkitExitFullscreen();\n\t\t\t} else if (document.msExitFullscreen) {\n\t\t\t\tdocument.msExitFullscreen();\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t})\n\t}\n\n\thandleToggleSidebar() {\n\t\tthis.setState({\n\t\t\tshowSidebar: !this.state.showSidebar\n\t\t})\n\t}\n\n\thandleCompartmentSelection(index) {\n\t\tthis.setState({\n\t\t\tcompartmentIndex: index\n\t\t})\n\t}\n\n\thandleDisplaySegmentation(value) {\n\t\tthis.setState({\n\t\t\tdisplaySegmentation: value\n\t\t})\n\t}\n\n\thandleDisplayProtein(value) {\n\t\tthis.setState({\n\t\t\tdisplayProtein: value\n\t\t})\n\t}\n\n\trender() {\n\t\tlet volumeSize = [\n\t\t\tthis.state.bufferDims[0] * this.state.voxelSize[0],\n\t\t\tthis.state.bufferDims[1] * this.state.voxelSize[1],\n\t\t\tthis.state.bufferDims[2] * this.state.voxelSize[2]\n\t\t]\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Import\n\t\t\t\t\tshow={this.state.showImport}\n\t\t\t\t\tonAbort={this.handleAbortImport}\n\t\t\t\t\tonComplete={this.handleCompleteImport}\n\t\t\t\t/>\n\t\t\t\t<Overlay>\n\t\t\t\t\t<Toolbar\n\t\t\t\t\t\tfullscreen={this.state.fullscreen}\n\t\t\t\t\t\tonImportData={this.handleShowImport}\n\t\t\t\t\t\tonToggleFullscreen={this.handleToggleFullscreen}\n\t\t\t\t\t\tonToggleSidebar={this.handleToggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\topen={this.state.showSidebar}\n\t\t\t\t\t\tnumCompartments={this.state.sdfBuffers.length}\n\t\t\t\t\t\tonCompartmentSelection={this.handleCompartmentSelection}\n\t\t\t\t\t\tselection={this.state.compartmentIndex}\n\t\t\t\t\t\tonDisplaySegmentation={this.handleDisplaySegmentation}\n\t\t\t\t\t\tonDisplayProtein={this.handleDisplayProtein}\n\t\t\t\t\t\tdisplayProtein={this.state.displayProtein}\n\t\t\t\t\t\tdisplaySegmentation={this.state.displaySegmentation}\n\t\t\t\t\t/>\n\t\t\t\t</Overlay>\n\t\t\t\t<Views\n\t\t\t\t\tsdf={{buffers: this.state.sdfBuffers, dims: this.state.bufferDims}}\n\t\t\t\t\tprotein={{buffer: this.state.proteinBuffer, dims: this.state.bufferDims}}\n\t\t\t\t\tvolumeSize={volumeSize}\n\t\t\t\t\tdisplayProtein={this.state.displayProtein}\n\t\t\t\t\tdisplaySegmentation={this.state.displaySegmentation}\n\t\t\t\t\tisovalue={0}\n\t\t\t\t\tcompartmentIndex={this.state.compartmentIndex}\n\t\t\t\t\tready={this.state.ready}\n\t\t\t\t\tonClickImport={this.handleShowImport}\n\t\t\t\t\tlocalHistogram={this.state.localHistogram}\n\t\t\t\t\tglobalHistogram={this.state.globalHistogram}\n\t\t\t\t\tlabelsHistogram={this.state.labelsHistogram}\n\t\t\t\t/>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Main","import React from 'react';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nimport Main from './ui/Main';\n\nfunction App() {\n  return(\n      <div className=\"App\">\n        <Main />\n     </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}