{"version":3,"sources":["tiff.js","components/Main.js","components/Import.js","components/Toolbar.js","components/Sidebar.js","components/Overlay.js","components/Canvas.js","components/Plots.js","components/StoreItem.js","components/MapTools.js","components/Views.js","components/InputVector.js","components/ImportDialog.js","components/LabeledProgressBar.js","components/ImportProgress.js","workers/histogram-worker.js","workers/sdf-worker.js","workers/tiff-worker.js","renderers/volume/volume_renderer.js","renderers/volume/default/volume_renderer_default.js","renderers/renderer.js","renderers/map/map_renderer.js","renderers/volume/default/shaders/volume_renderer_vert.glsl","renderers/volume/default/shaders/volume_renderer_frag.glsl","renderers/volume/default/shaders/post_vert.glsl","renderers/volume/default/shaders/post_frag.glsl","renderers/map/shaders/mip_vert.glsl","renderers/map/shaders/mip_frag.glsl","renderers/map/shaders/selection_vert.glsl","renderers/map/shaders/selection_frag.glsl","renderers/map/shaders/map_vert.glsl","renderers/map/shaders/map_frag.glsl","App.js","reportWebVitals.js","index.js"],"names":["Tiff","this","buffer","pixels","Uint8Array","width","height","depth","bits","file","a","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","readerEvent","target","result","onerror","_readerEvent","error","onabort","ifd","UTIF","Object","keys","length","Error","properties","t256","t257","t258","t277","i","sliceProperties","JSON","stringify","onError","onProgress","worker","Worker","name","type","decodeTiffBuffer","Comlink","terminate","Main","props","state","fullscreen","showSidebar","showImport","voxelSize","sdf","buffers","dims","protein","ready","compartmentIndex","displaySegmentation","displayProtein","isovalue","globalHistogram","labelsHistogram","localHistogram","debugSamples","useLod","mainView","mapView","projectionPixels","selectionPixels","handleShowImport","bind","handleToggleFullscreen","handleToggleSidebar","handleAbortImport","handleCompleteImport","handleCompartmentSelection","handleDisplaySegmentation","handleDisplayProtein","handleDebugSamples","handleUseLod","handleIsovalue","handleMainView","handleMapView","handleSelectionUpdated","handleProjectionUpdated","handleSelectionDone","computeLocalHistogram","setState","dom","sdfBuffers","proteinBuffers","bufferDims","hist","histLabels","document","exitFullscreen","webkitExitFullscreen","msExitFullscreen","elem","documentElement","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","index","value","compute","volumeSize","className","show","onAbort","onComplete","style","position","variant","size","onClick","onSelectionUpdated","onProjectionUpdated","onSelectionDone","onImportData","onToggleFullscreen","onToggleSidebar","open","numCompartments","onCompartmentSelection","selection","onDisplaySegmentation","onDisplayProtein","onDebugSamples","onUseLod","onIsovalue","Array","from","onMainView","onMapView","Component","Import","tiffProtein","tiffSegmentation","proteinProgress","segmentationProgress","sdfProgress","proteinError","segmentationError","sdfError","step","preImportError","handleImport","handleClose","onProteinProgress","onSegmentationProgress","onProteinError","onSegmentationError","onSdfProgress","onSdfError","progress","fileProtein","fileSegmentation","message","decode","reducer","accumulator","currentValue","Math","max","reduce","promises","workers","p","b","push","pyramid","w","h","d","level0","j","k","pw","ph","pd","ceil","plevel","level","pi","pj","pk","floor","min","Float32Array","area","parseFloat","x","y","z","onImport","onClose","Toolbar","fullscreenIcon","Sidebar","handleSelectCompartmet","dropdownItems","Item","dropdownText","md","in","Body","Check","Input","checked","disabled","onChange","e","Label","Range","Toggle","Menu","Overlay","children","Canvas","canvasRef","useRef","useEffect","Renderer","current","ref","Plots","data","labels","datasets","backgroundColor","borderColor","label","options","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","MapTools","labelRef","useState","edit","setEdit","editText","setEditText","blockBlur","setBlockBlur","focus","buttonOrForm","handleEdit","doEdit","FormControl","marginLeft","onKeyPress","key","onLabel","onBlur","Button","InputGroup","onMouseEnter","onMouseLeave","onExport","onDelete","storeData","localforage","createInstance","storeName","description","penSize","setPenSize","penMode","setPenMode","uuids","setUuids","reloadStore","handlePenMode","mode","handlePenSize","pt","list","iterate","iterationNumber","then","storeList","StoreItem","uuid","getItem","removeItem","item","setItem","handleLabelStore","console","log","png","UPNG","blob","Blob","url","URL","createObjectURL","fileLink","createElement","href","download","click","entries","overflowY","right","bottom","ButtonToolbar","flexDirection","ButtonGroup","vertical","input","onchange","files","replace","filename","img","Views","mainRef","mapRef","InputVector","handleChangeX","handleChangeY","handleChangeZ","Text","Form","Control","placeholder","ImportDialog","working","handleClickImport","handleChangeFileProtein","handleChangeFileSegmentation","handleChangeVoxelSize","formValid","alert","Alert","Modal","onHide","Header","closeButton","Title","Group","Footer","LabeledProgressBar","animated","ProgressBar","clipPath","striped","now","ImportProgress","backdrop","module","exports","VolumeRenderer","texture","textures","vec","THREE","DefaultUp","canvas","renderer","VolumeRendererDefault","camera","clientWidth","clientHeight","controls","OrbitControls","update","materialMarchVolume","glslVersion","uniforms","modelview","matrixWorldInverse","proj","projectionMatrix","resolution","volume0","volume1","volume2","volume3","volume4","volume5","volume6","volume7","volume8","volume9","texDepth","displayCompartments","projection","vertexShader","require","fragmentShader","side","transparent","materialCompose","texGrid","texVolume","sceneGrid","grid","rotateX","PI","add","onBeforeRender","scene","geometry","material","group","pos","updateMatrixWorld","sceneVolume","box","sceneCompose","cameraCompose","plane","quad","renderTargetVolume","renderTargetGrid","depthTexture","volumeDirty","addEventListener","window","resizeCallback","volumeTexture","sdfTextures","rect","getBoundingClientRect","left","top","innerHeight","setViewport","setScissor","setScissorTest","gl","getContext","setRenderTarget","clear","COLOR_BUFFER_BIT","render","setSize","innerWidth","aspect","updateProjectionMatrix","geom","setAttribute","points","MapRenderer","materialProjection","volume","materialSelection","lastPosition","depressed","restore","doRestore","materialMap","renderTargetSelection","renderTargetProjection","enableRotate","cameraProjection","sceneProjection","planeMap","cameraSelection","sceneSelection","sceneMap","projectionDirty","selectionDirty","mouseMove","mouseDown","mouseUp","mouseOut","raycaster","mouse","clientX","clientY","setFromCamera","clone","intersects","intersectObject","uv","button","getMousePosition","renderSelection","renderProjection","renderMap","readRenderTargetPixels","stats","Stats","showPanel","body","appendChild","volumeRenderer","mapRenderer","main","initCanvas","initMainView","initMapView","preserveDrawingBuffer","autoClearColor","init","animate","setOnSelectionUpdated","callback","setOnProjectionUpdated","setOnSelectionDone","setVolumeSize","setProteinData","format","internalFormat","minFilter","magFilter","generateMipmaps","unpackAlignment","setDistanceFieldData","arrays","tex","setDistanceData","setSelectionTexture","getSeletionTexture","setProjectionTexture","getProjectionTexture","requestAnimationFrame","selectionUpdated","getSelectionPixels","getProjectionPixels","setIsovalue","setDisplayProtein","setDisplayCompartment","setDisplayCompartments","setCompartmentIndex","deleteSelection","getMapSelectionPixels","setMapSelectionPixels","setSelectionFromTexture","setDebugSamples","setUseLod","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f588d2c7.chunk.js","sourcesContent":["import * as UTIF from 'utif';\n\nimport * as Comlink from 'comlink';\n\nclass Tiff {\n    constructor() {\n        this.buffer = null;\n        this.pixels = new Uint8Array();\n        this.width = 0;\n        this.height = 0;\n        this.depth = 0;\n        this.bits = 0;\n    }\n\n    async open(file) {\n        let buffer = await (() => {\n            return new Promise(function(resolve, reject) {\n                var reader = new FileReader();\n                reader.readAsArrayBuffer(file)\n            \n                reader.onload = readerEvent => {\n                    resolve(readerEvent.target.result);\n                }\n        \n                reader.onerror = _readerEvent => {\n                    reject(reader.error);\n                }\n        \n                reader.onabort = _readerEvent => {\n                    reject(\"FileReader was aborted!\");\n                }\n            });\n        })();\n\n        let ifd = UTIF.decode(buffer);\n        if (Object.keys(ifd[0]).length === 0) {\n            throw new Error(\"Could not decode TIFF file!\");\n        }\n\n        let properties = (({ t256, t257, t258, t277 }) => ({ t256, t257, t258, t277 }))(ifd[0]);\n\n        if (properties.t277[0] !== 1) {\n            throw new Error(\"Only grayscale images are supported.\");\n        }\n    \n        if (properties.t258[0] !== 8) {\n            throw new Error(\"Only images with bit depth 8 are supported.\");\n        }\n    \n        for (var i = 0; i < ifd.length; ++i) {\n            let sliceProperties = (({ t256, t257, t258, t277 }) => ({ t256, t257, t258, t277 }))(ifd[i]);\n    \n            if (JSON.stringify(properties) !== JSON.stringify(sliceProperties)) {\n                throw new Error(\"Slice \" + i + \" has incorrect dimensions or pixel depth.\");\n            }\n        }\n\n        this.buffer = buffer;\n        this.width = properties.t256[0];\n        this.height = properties.t257[0];\n        this.depth = ifd.length;\n        this.bits = properties.t258[0];\n    };\n\n    async decode(onError, onProgress) {\n        const worker = new Worker('./workers/tiff-worker.js', {\n            name: 'tiff-worker',\n            type: 'module'\n          });\n        const decodeTiffBuffer = Comlink.wrap(worker);\n        this.pixels = await decodeTiffBuffer(this.buffer, Comlink.proxy(onError), Comlink.proxy(onProgress));\n        worker.terminate();\n    };\n}\n\nexport { Tiff };","import React, { Component } from 'react'\n\nimport Import from './Import'\nimport Toolbar from './Toolbar';\nimport Sidebar from './Sidebar';\nimport Overlay from './Overlay';\nimport Views from './Views';\nimport Canvas from './Canvas'\n\nimport Button from 'react-bootstrap/Button';\n\nimport * as Comlink from 'comlink';\n\nclass Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfullscreen: false,\n\t\t\tshowSidebar: false,\n\t\t\tshowImport: false,\n\t\t\tvoxelSize: [0, 0, 0],\n\t\t\tsdf: {buffers: [], dims: [0, 0, 0]},\n\t\t\tprotein: {buffer: [], dims: [0, 0, 0]},\n\t\t\tready: false,\n\t\t\tcompartmentIndex: 0,\n\t\t\tdisplaySegmentation: true,\n\t\t\tdisplayProtein: true,\n\t\t\tisovalue: 0,\n\t\t\tglobalHistogram: [],\n\t\t\tlabelsHistogram: [],\n\t\t\tlocalHistogram: [],\n\t\t\t// Debug variables\n\t\t\tdebugSamples: false,\n\t\t\tuseLod: true,\n\t\t\tmainView: \"\",\n\t\t\tmapView: \"\",\n\n\t\t\tprojectionPixels: [],\n\t\t\tselectionPixels: []\n\t\t}\n\t\t\n\t\tthis.handleShowImport = this.handleShowImport.bind(this);\n\t\tthis.handleToggleFullscreen = this.handleToggleFullscreen.bind(this);\n\t\tthis.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n\t\tthis.handleAbortImport = this.handleAbortImport.bind(this);\n\t\tthis.handleCompleteImport = this.handleCompleteImport.bind(this);\n\t\tthis.handleCompartmentSelection = this.handleCompartmentSelection.bind(this);\n\t\tthis.handleDisplaySegmentation = this.handleDisplaySegmentation.bind(this);\n\t\tthis.handleDisplayProtein = this.handleDisplayProtein.bind(this);\n\t\tthis.handleDebugSamples = this.handleDebugSamples.bind(this);\n\t\tthis.handleUseLod = this.handleUseLod.bind(this);\n\t\tthis.handleIsovalue = this.handleIsovalue.bind(this);\n\t\tthis.handleMainView = this.handleMainView.bind(this);\n\t\tthis.handleMapView = this.handleMapView.bind(this);\n\t\tthis.handleSelectionUpdated = this.handleSelectionUpdated.bind(this);\n\t\tthis.handleProjectionUpdated = this.handleProjectionUpdated.bind(this);\n\t\tthis.handleSelectionDone = this.handleSelectionDone.bind(this);\n\n\t\tthis.computeLocalHistogram = this.computeLocalHistogram.bind(this);\n\t}\n\n\thandleShowImport() {\n\t\tthis.setState({\n\t\t\tshowImport: true\n\t\t});\n\t}\n\n\thandleAbortImport() {\n\t\tthis.setState({\n\t\t\tshowImport: false\n\t\t});\n\t}\n\n\thandleMapView(dom) {\n\t\tthis.setState({\n\t\t\tmapView: dom\n\t\t})\n\t}\n\n\thandleMainView(dom) {\n\t\tthis.setState({\n\t\t\tmainView: dom\n\t\t})\n\t}\n\n\thandleCompleteImport(sdfBuffers, proteinBuffers, bufferDims, voxelSize, hist, histLabels) {\n\t\tthis.setState({\n\t\t\tsdf: {buffers: sdfBuffers, dims: bufferDims},\n\t\t\tprotein: {buffer: proteinBuffers, dims: bufferDims},\n\t\t\tvoxelSize: voxelSize,\n\t\t\tshowImport: false,\n\t\t\tready: true,\n\t\t\tglobalHistogram: hist,\n\t\t\tlabelsHistogram: histLabels,\n\t\t})\n\t}\n\n\thandleToggleFullscreen() {\n\t\tif (!this.state.fullscreen) {\n\t\t\tlet elem = document.documentElement;\n\t\t\tif (elem.requestFullscreen) {\n\t\t\t\telem.requestFullscreen();\n\t\t\t} else if (elem.webkitRequestFullscreen) {\n\t\t\t\telem.webkitRequestFullscreen();\n\t\t\t} else if (elem.msRequestFullscreen) {\n\t\t\t\telem.msRequestFullscreen();\n\t\t\t}\n\t\t} else {\n\t\t\tif (document.exitFullscreen) {\n\t\t\t\tdocument.exitFullscreen();\n\t\t\t} else if (document.webkitExitFullscreen) {\n\t\t\t\tdocument.webkitExitFullscreen();\n\t\t\t} else if (document.msExitFullscreen) {\n\t\t\t\tdocument.msExitFullscreen();\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t})\n\t}\n\n\thandleToggleSidebar() {\n\t\tthis.setState({\n\t\t\tshowSidebar: !this.state.showSidebar\n\t\t})\n\t}\n\n\thandleCompartmentSelection(index) {\n\t\tthis.setState({\n\t\t\tcompartmentIndex: index\n\t\t})\n\t}\n\n\thandleDisplaySegmentation(value) {\n\t\tthis.setState({\n\t\t\tdisplaySegmentation: value\n\t\t})\n\t}\n\n\thandleDisplayProtein(value) {\n\t\tthis.setState({\n\t\t\tdisplayProtein: value\n\t\t})\n\t}\n\n\thandleDebugSamples(value) {\n\t\tthis.setState({\n\t\t\tdebugSamples: value\n\t\t})\n\t}\n\n\thandleUseLod(value) {\n\t\tthis.setState({\n\t\t\tuseLod: value\n\t\t})\n\t}\n\n\thandleIsovalue(value) {\n\t\tthis.setState({\n\t\t\tisovalue: value\n\t\t})\n\t}\n\n\tasync computeLocalHistogram(selectionPixels, projectionPixels) {\n\t\tif (selectionPixels.buffer && projectionPixels.buffer) {\n\t\t\tconst worker = new Worker('../workers/histogram-worker.js', {\n\t\t\t\tname: 'histogram-worker',\n\t\t\t\ttype: 'module'\n\t\t\t  });\n\t\t\tconst compute = Comlink.wrap(worker);\n\t\t\tlet hist = await compute(this.state.sdf.buffers[0], this.state.protein.buffer[0], this.state.sdf.dims, selectionPixels, projectionPixels);\n\t\t\tworker.terminate();\n\n\t\t\tthis.setState({\n\t\t\t\tlocalHistogram: hist\n\t\t\t})\n\t\t}\n\t}\n\n\thandleProjectionUpdated(projectionPixels) {\n\t\tthis.setState({\n\t\t\tprojectionPixels: projectionPixels\n\t\t})\n\t}\n\n\thandleSelectionUpdated(selectionPixels) {\n\t\tthis.setState({\n\t\t\tselectionPixels: selectionPixels\n\t\t})\n\t}\n\n\thandleSelectionDone() {\n\t\tthis.computeLocalHistogram(this.state.selectionPixels, this.state.projectionPixels);\n\t}\n\n\trender() {\n\t\tlet volumeSize = [\n\t\t\tthis.state.sdf.dims[0] * this.state.voxelSize[0],\n\t\t\tthis.state.sdf.dims[1] * this.state.voxelSize[1],\n\t\t\tthis.state.sdf.dims[2] * this.state.voxelSize[2]\n\t\t]\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"background\"></div>\n\t\t\t\t<Import\n\t\t\t\t\tshow={this.state.showImport}\n\t\t\t\t\tonAbort={this.handleAbortImport}\n\t\t\t\t\tonComplete={this.handleCompleteImport}\n\t\t\t\t/>\n\t\t\t\t{!this.state.ready && \n\t\t\t\t    <div className=\"d-flex justify-content-center align-items-center\" style={{position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\tonClick={this.handleShowImport}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"bi-plus-square\"></i>&nbsp;&nbsp;Import Data\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{ this.state.ready &&\n\t\t\t\t<>\n\t\t\t\t<Canvas\n\t\t\t\t\tmainView={this.state.mainView}\n\t\t\t\t\tmapView={this.state.mapView}\n\t\t\t\t\tsdf={this.state.sdf}\n\t\t\t\t\tprotein={this.state.protein}\n\t\t\t\t\tvolumeSize={volumeSize}\n\t\t\t\t\tdisplayProtein={this.state.displayProtein}\n\t\t\t\t\tdisplaySegmentation={this.state.displaySegmentation}\n\t\t\t\t\tcompartmentIndex={this.state.compartmentIndex}\n\t\t\t\t\tready={this.state.ready}\n\t\t\t\t\tdebugSamples={this.state.debugSamples}\n\t\t\t\t\tuseLod={this.state.useLod}\n\t\t\t\t\tisovalue={this.state.isovalue}\n\t\t\t\t\tonSelectionUpdated={this.handleSelectionUpdated}\n\t\t\t\t\tonProjectionUpdated={this.handleProjectionUpdated}\n\t\t\t\t\tonSelectionDone={this.handleSelectionDone}\n\t\t\t\t/>\n\t\t\t\t<Overlay>\n\t\t\t\t\t<Toolbar\n\t\t\t\t\t\tfullscreen={this.state.fullscreen}\n\t\t\t\t\t\tonImportData={this.handleShowImport}\n\t\t\t\t\t\tonToggleFullscreen={this.handleToggleFullscreen}\n\t\t\t\t\t\tonToggleSidebar={this.handleToggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\topen={this.state.showSidebar}\n\t\t\t\t\t\tnumCompartments={this.state.sdf.buffers.length}\n\t\t\t\t\t\tonCompartmentSelection={this.handleCompartmentSelection}\n\t\t\t\t\t\tselection={this.state.compartmentIndex}\n\t\t\t\t\t\tonDisplaySegmentation={this.handleDisplaySegmentation}\n\t\t\t\t\t\tonDisplayProtein={this.handleDisplayProtein}\n\t\t\t\t\t\tonDebugSamples={this.handleDebugSamples}\n\t\t\t\t\t\tonUseLod={this.handleUseLod}\n\t\t\t\t\t\tonIsovalue={this.handleIsovalue}\n\t\t\t\t\t\tdisplayProtein={this.state.displayProtein}\n\t\t\t\t\t\tdisplaySegmentation={this.state.displaySegmentation}\n\t\t\t\t\t/>\n\t\t\t\t</Overlay>\n\t\t\t\t<Views\n\t\t\t\t\tlocalHistogram={Array.from(this.state.localHistogram)}\n\t\t\t\t\tglobalHistogram={Array.from(this.state.globalHistogram)}\n\t\t\t\t\tlabelsHistogram={this.state.labelsHistogram}\n\t\t\t\t\tonMainView={this.handleMainView}\n\t\t\t\t\tonMapView={this.handleMapView}\n\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Main","import React, { Component } from 'react'\n\nimport ImportDialog from './ImportDialog';\nimport ImportProgress from './ImportProgress';\n\nimport * as Comlink from 'comlink';\n\nimport { Tiff } from '../tiff';\n\nclass Import extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tiffProtein: \"\",\n            tiffSegmentation: \"\",\n            voxelSize: \"\",\n            proteinProgress: 0,\n            segmentationProgress: 0,\n            sdfProgress: 0,\n            proteinError: \"\",\n            segmentationError: \"\",\n            sdfError: \"\",\n            step: \"dialog\",\n            preImportError: \"\"\n        }\n\n        this.handleImport = this.handleImport.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.onProteinProgress = this.onProteinProgress.bind(this);\n        this.onSegmentationProgress = this.onSegmentationProgress.bind(this);\n        this.onProteinError = this.onProteinError.bind(this);\n        this.onSegmentationError = this.onSegmentationError.bind(this);\n        this.onSdfProgress = this.onSdfProgress.bind(this);\n        this.onSdfError = this.onSdfError.bind(this);\n    }\n\n    onProteinProgress(progress) {\n        this.setState({\n            proteinProgress: progress\n        })\n    }\n\n    onSegmentationProgress(progress) {\n        this.setState({\n            segmentationProgress: progress\n        })\n    }\n\n    onProteinError(error) {\n        this.setState({\n            proteinError: error\n        })\n    }\n\n    onSegmentationError(error) {\n        this.setState({\n            segmentationError: error\n        })\n    }\n\n    onSdfProgress(progress) {\n        this.setState({\n            sdfProgress: progress\n        })\n    }\n\n    onSdfError(error) {\n        this.setState({\n            sdfError: error\n        })\n    }\n\n    async handleImport(fileProtein, fileSegmentation, voxelSize) {\n        let tiffProtein = new Tiff();\n        let tiffSegmentation = new Tiff();\n    \n        try {\n          await tiffProtein.open(fileProtein);\n          await tiffSegmentation.open(fileSegmentation);\n        } catch (e) {\n          this.setState({\n            preImportError: e.message\n          });\n          return;\n        }\n    \n        if (tiffProtein.width !== tiffSegmentation.width || tiffProtein.height !== tiffSegmentation.height || tiffProtein.depth !== tiffSegmentation.depth) {\n          this.setState({\n            preImportError: \"Please make sure the protein and the segmentation data have the same dimensions.\"\n          });\n          return;\n        }\n\n        this.setState({\n            step: \"import\",\n            voxelSize: voxelSize,\n            tiffProtein: tiffProtein,\n            tiffSegmentation: tiffSegmentation,\n            segmentationProgress: 0,\n            proteinProgress: 0,\n            sdfProgress: 0,\n            segmentationError: \"\",\n            proteinError: \"\",\n            sdfError: \"\"\n        });\n        \n        // We can decode the TIFFs in parallel.\n        await tiffProtein.decode(this.onProteinError, this.onProteinProgress);\n        await tiffSegmentation.decode(this.onSegmentationError, this.onSegmentationProgress);\n        const reducer = (accumulator, currentValue) => Math.max(accumulator, currentValue);\n        var numCompartments = tiffSegmentation.pixels.reduce(reducer);\n\n        let promises = [];\n        let workers = [];\n        let progress = new Array(numCompartments+1);\n\n        for (let i = 0; i < numCompartments+1; ++i) {\n            const target = i;\n            const onProgress = (p) => {\n                progress[target] = p * 100;\n                this.onSdfProgress(progress.reduce((a, b) => a + b, 0) / (numCompartments + 1));\n            }\n            promises.push(new Promise(function(resolve, reject) {\n                const worker = new Worker('../workers/sdf-worker.js', {\n                    name: 'sdf-worker',\n                    type: 'module'\n                });\n                workers.push(worker);\n                const sdf = Comlink.wrap(worker);\n                let result = sdf(tiffSegmentation, voxelSize, target, Comlink.proxy(onProgress));\n                resolve(result);\n            }));\n        }\n\n        //const sdfBuffers = await Promise.all(promises); // This needs too much memory for some reason?\n        let sdfBuffers = [];\n        for (let i = 0; i < promises.length; ++i) {\n            sdfBuffers.push(await promises[i]);\n        }\n        for (let i = 0; i < workers.length; ++i) {\n            workers[i].terminate();\n        }\n        this.onSdfProgress(100);\n\n        // Compute pyramid.\n        let pyramid = [];\n        let w = tiffProtein.width;\n        let h = tiffProtein.height;\n        let d = tiffProtein.depth;\n\n        let level0 = new Uint8Array(2*w*h*d);\n        for (let i = 0; i < w; ++i) {\n            for (let j = 0; j < h; ++j) {\n                for (let k = 0; k < d; ++k) {\n                    level0[2*(k*w*h+j*w+i)] = tiffProtein.pixels[k*w*h+j*w+i];\n                    level0[2*(k*w*h+j*w+i)+1] = level0[2*(k*w*h+j*w)+i];\n                }\n            }\n        }\n        pyramid.push(level0);\n\n        while (true) {\n            let pw = w;\n            let ph = h;\n            let pd = d;\n            w = Math.ceil(w / 2.0);\n            h = Math.ceil(h / 2.0);\n            d = Math.ceil(d / 2.0);\n\n            let plevel = pyramid[pyramid.length - 1];\n            let level = new Uint8Array(2*w*h*d);\n            for (let pi = 0; pi < pw; ++pi) {\n                for (let pj = 0; pj < ph; ++pj) {\n                    for (let pk = 0; pk < pd; ++pk) {\n                        let i = Math.floor(pi/2.0);\n                        let j = Math.floor(pj/2.0);\n                        let k = Math.floor(pk/2.0);\n                        level[2*(k*w*h+j*w+i)] = Math.max(level[2*(k*w*h+j*w+i)], plevel[2*(pk*pw*ph+pj*pw+pi)]);\n                        level[2*(k*w*h+j*w+i)+1] = Math.min(level[2*(k*w*h+j*w+i)+1], plevel[2*(pk*pw*ph+pj*pw+pi)+1]);\n                    }\n                }\n            }\n            pyramid.push(level);\n\n            if (w <= 1 || h <= 1 || d <= 1) break;\n        }\n\n        // Compute global histogram.\n        const bitDepth = 8;\n        let hist = new Float32Array(2**bitDepth);\n        let area = new Float32Array(2**bitDepth);\n    \n        for (let i = 0; i < sdfBuffers[0].length; ++i) {\n            hist[sdfBuffers[0][i]] += tiffProtein.pixels[i];\n            area[sdfBuffers[0][i]] += 1.0;\n    \n        }\n    \n        for (let i = 0; i < hist.length; ++i) {\n            hist[i] = hist[i]/area[i];\n        }\n\n        let histLabels = [];\n        for (let i = 0; i < 256; ++i) {\n            histLabels.push(i / 10.0 - 5.0);\n        }\n    \n        this.setState({\n            step: \"dialog\"\n        });\n\n        this.props.onComplete(sdfBuffers, pyramid, [tiffProtein.width, tiffProtein.height, tiffProtein.depth],\n                              [parseFloat(voxelSize.x), parseFloat(voxelSize.y), parseFloat(voxelSize.z)],\n                              hist, histLabels);\n    }\n\n    handleClose() {\n        this.props.onAbort();\n    }\n\n    render() {\n        return (\n            <>\n                <ImportDialog\n                    show={this.state.step === \"dialog\" && this.props.show}\n                    error={this.state.preImportError}\n                    onImport={this.handleImport}\n                    onClose={this.handleClose}\n                />\n                <ImportProgress\n                    show={this.state.step === \"import\" && this.props.show}\n                    proteinProgress={this.state.proteinProgress}\n                    segmentationProgress={this.state.segmentationProgress}\n                    sdfProgress={this.state.sdfProgress}\n                    proteinError={this.state.proteinError}\n                    segmentationError={this.state.segmentationError}\n                    sdfError={this.state.sdfError}\n                />\n            </>\n        )\n    }\n}\n\nexport default Import","import React, { Component } from 'react'\n\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n\nclass Toolbar extends Component {\n\trender() {\n\t\tlet fullscreenIcon;\n\t\tif (this.props.fullscreen) fullscreenIcon = \"bi-fullscreen-exit\";\n\t\telse fullscreenIcon = \"bi-arrows-fullscreen\";\n\t\treturn (\n\t\t\t<ButtonToolbar className=\"justify-content-between\">\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.props.onToggleSidebar}\n\t\t\t\t><i className=\"bi-tools\"></i></Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.props.onImportData}\n\t\t\t\t>Import Data</Button>\n\t\t\t</ButtonGroup>\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.props.onToggleFullscreen}\n\t\t\t\t><i className={fullscreenIcon}></i></Button>\n\t\t\t</ButtonGroup>\n\t\t\t</ButtonToolbar>\n\t\t)\n\t}\n}\n\nexport default Toolbar","import React from 'react'\n\nimport Col from 'react-bootstrap/Col';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nconst Sidebar = props => {\n\n    const handleSelectCompartmet = (index) => {\n        props.onCompartmentSelection(index);\n    }\n\n    const handleChangeDisplaySegmentation = (e) => {\n        props.onDisplaySegmentation(e.target.checked);\n    }\n\n    const handleChangeDisplayProtein = (e) => {\n        props.onDisplayProtein(e.target.checked);\n    }\n\n    const handleChangeDebugSamples = (e) => {\n        props.onDebugSamples(e.target.checked);\n    }\n\n    const handleChangeUseLod = (e) => {\n        props.onUseLod(e.target.checked);\n    }\n\n    const handleChangeIsovalue = (e) => {\n        props.onIsovalue(e.target.value);\n    }\n\n    let dropdownItems = [\n    <Dropdown.Item\n        onClick={() => handleSelectCompartmet(0)}\n    >All Compartments</Dropdown.Item>]\n    for (var i = 0; i < props.numCompartments-1; ++i) {\n        let index = i;\n        dropdownItems.push(\n        <Dropdown.Item\n            onClick={() => handleSelectCompartmet(index+1)}\n        >Compartment {index+1}</Dropdown.Item>);\n    }\n\n    let dropdownText = \"\";\n    if (props.numCompartments === 0) dropdownText = \"No Compartment Data\"\n    else if (props.selection === 0) dropdownText = \"All Compartments\";\n    else dropdownText = \"Compartment \" + props.selection;\n    return (\n        <Row md={3}>\n            <Col>\n                <Collapse in={props.open}>\n                    <Card>\n                        <Card.Body>\n                            <Form>\n                                <Form.Check className=\"form-switch\">\n                                    <Form.Check.Input\n                                        checked={props.displayProtein}\n                                        disabled={props.numCompartments===0}\n                                        onChange={handleChangeDisplayProtein}\n                                    />\n                                    <Form.Check.Label>Display Protein</Form.Check.Label>\n                                </Form.Check>\n                                <Form.Check className=\"form-switch\">\n                                    <Form.Check.Input\n                                        checked={props.displaySegmentation}\n                                        disabled={props.numCompartments===0}\n                                        onChange={handleChangeDisplaySegmentation}\n                                    />\n                                    <Form.Check.Label>Display Segmentation</Form.Check.Label>\n                                </Form.Check>\n                                <Form.Range\n                                    disabled={props.numCompartments===0}\n                                    onChange={handleChangeIsovalue}\n                                />\n                                <Dropdown>\n                                    <Dropdown.Toggle disabled={props.numCompartments===0}>\n                                        {dropdownText}\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        {dropdownItems}\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                                Debug Options\n                                <Form.Check className=\"form-switch\">\n                                    <Form.Check.Input\n                                        checked={props.debugSamples}\n                                        onChange={handleChangeDebugSamples}\n                                    />\n                                    <Form.Check.Label>Display Texture Samples</Form.Check.Label>\n                                </Form.Check>\n                                <Form.Check className=\"form-switch\">\n                                    <Form.Check.Input\n                                        checked={props.useLod}\n                                        onChange={handleChangeUseLod}\n                                    />\n                                    <Form.Check.Label>Use LoD</Form.Check.Label>\n                                </Form.Check>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Collapse>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Sidebar;","const Overlay = (props) => {\n    return <div className=\"overlay fill-screen d-grid gap-3\">\n        {props.children}\n    </div>\n}\n\nexport default Overlay","import React, { useRef, useEffect } from 'react'\n\nimport * as Renderer from '../renderers/renderer.js'\n\nconst Canvas = props => {\n\tconst canvasRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tRenderer.setOnSelectionUpdated(props.onSelectionUpdated);\n\t}, [props.onSelectionUpdated])\n\n\tuseEffect(() => {\n\t\tRenderer.setOnProjectionUpdated(props.onProjectionUpdated);\n\t}, [props.onProjectionUpdated])\n\n\tuseEffect(() => {\n\t\tRenderer.setOnSelectionDone(props.onSelectionDone);\n\t}, [props.onSelectionDone])\n\t\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.main(canvasRef.current, props.mainView, props.mapView);\n\t\t}\n\t}, [props.mainView, props.mapView, props.ready])\n\n\t\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setDistanceFieldData(props.sdf.buffers, props.sdf.dims);\n\t\t}\n\t}, [props.sdf, props.mainView, props.mapView, props.ready])\n\t\n\t\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setProteinData(props.protein.buffer, props.protein.dims);\n\t\t}\n\t}, [props.protein, props.mainView, props.mapView, props.ready])\n\n\t\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setVolumeSize(props.volumeSize);\n\t\t}\n\t}, [props.volumeSize, props.mainView, props.mapView, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setDisplayProtein(props.displayProtein);\n\t\t}\n\t}, [props.displayProtein, props.mainView, props.mapView, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setDisplayCompartment(props.displaySegmentation);\n\t\t}\n\t}, [props.displaySegmentation, props.mainView, props.mapView, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setCompartmentIndex(props.compartmentIndex);\n\t\t}\n\t}, [props.compartmentIndex, props.mainView, props.mapView, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setDebugSamples(props.debugSamples);\n\t\t}\t\n\t}, [props.debugSamples, props.mainView, props.mapView, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setUseLod(props.useLod);\n\t\t}\n\t}, [props.useLod, props.mainView, props.mapView, props.ready])\n\n\tuseEffect(() => {\n\t\tif (props.ready && props.mainView && props.mapView) {\n\t\t\tRenderer.setIsovalue(props.isovalue);\n\t\t}\n\t}, [props.isovalue, props.mainView, props.mapView, props.ready])\n\n\treturn (\n\t\t<canvas className=\"renderer\" ref={canvasRef}/>\n\t);\n}\n\nexport default Canvas","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst Plots = props => {\n    const data = {\n        labels: props.labelsHistogram,\n        datasets: [{\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgb(255, 99, 132)',\n            data: props.globalHistogram,\n            label: 'Global Histogram',\n        },\n        {\n            backgroundColor: 'rgb(0, 255, 132)',\n            borderColor: 'rgb(0, 255, 132)',\n            data: props.localHistogram,\n            label: 'Local Histogram',\n        }]\n    };\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n        maintainAspectRatio: false\n    };\n\n    return (\n        <>\n            <Bar\n                className=\"plots\"\n                data={data}\n                options={options}\n            />\n        </>\n    );\n};\n\nexport default Plots;","import React, { useEffect, useRef, useState } from 'react'\n\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst MapTools = props => {\n    const labelRef = useRef();\n\n    const [edit, setEdit] = useState(false);\n    const [editText, setEditText] = useState(\"\");\n    const [blockBlur, setBlockBlur] = useState(false); // Block onBlur when mouse is over the label button.\n\n    useEffect(() => {\n        if (labelRef.current && edit) {\n            labelRef.current.focus();\n            labelRef.current.value = editText;\n        }\n    }, [edit, editText, labelRef])\n\n    const handleBlur = () => {\n        if (!blockBlur) {\n            handleEdit(false);\n        }\n    }\n\n    const handleClickEdit = () => {\n        handleEdit(!edit);\n    }\n\n    const handleEdit = (doEdit) => {;\n        setEdit(doEdit);\n        setEditText(props.label);\n    }\n\n    const handleChange = (e) => {\n        props.onLabel(e.target.value);\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleEdit(false);\n        }\n    }\n\n    let buttonOrForm;\n    if (edit === true) {\n        buttonOrForm = <FormControl\n            style={{marginLeft: \"auto\"}}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            ref={labelRef}\n        />\n    } else {\n        buttonOrForm = <Button\n                            style={{marginLeft: \"auto\"}}\n                            onClick={props.onClick}\n                        >{props.label}</Button>\n    }\n\n    return(\n        <InputGroup>\n        {buttonOrForm}\n        <Button\n            onClick={handleClickEdit}\n            onMouseEnter={() => setBlockBlur(true)} // This is needed to re-enable the button\n            onMouseLeave={() => setBlockBlur(false)}\n        ><i className=\"bi-tag-fill\"></i></Button>\n        <Button\n            onClick={props.onExport}\n        ><i className=\"bi-download\"></i></Button>\n        <Button\n            onClick={props.onDelete}\n        ><i className=\"bi-trash-fill\"></i></Button>\n        </InputGroup>\n    );\n}\n\nexport default MapTools","import React, { useState, useEffect } from 'react'\n\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n\nimport StoreItem from './StoreItem';\n\nimport * as Renderer from '../renderers/renderer.js'\nimport localforage from 'localforage';\n\nimport * as UPNG from 'upng-js';\n\nimport { v4 as uuid } from 'uuid';\n\nconst dbName = 'selectionStore';\n\n// Create table 2 in databaseName\nvar storeData = localforage.createInstance({\n    name        : dbName,\n    storeName   : 'storeData',\n    description : '...'\n});\n\nconst MapTools = props => {\n\n    const [penSize, setPenSize] = useState(20);\n    const [penMode, setPenMode] = useState(\"draw\");\n    const [uuids, setUuids] = useState([]);\n\n    useEffect(() => {\n        reloadStore();\n    }, []);\n\n    const handleDelete = () => {\n        Renderer.deleteSelection();\n    };\n\n    const handlePenMode = (mode) => {\n        setPenMode(mode);\n        Renderer.setPenMode(mode);\n    }\n\n    const handlePenSize = (pt) => {\n        setPenSize(pt);\n        Renderer.setPenSize(pt);\n    };\n\n    const reloadStore = () => {\n        let list = {};\n        storeData.iterate(function(value, key, iterationNumber) {\n            list[key] = value.name;\n        }).then(() => {setUuids(list)})\n    }\n\n    const handleLoad = (uuid) => {\n        storeData.getItem(uuid).then((value) => {\n            Renderer.setMapSelectionPixels(value.data, value.width, value.height);\n        })\n    }\n\n    const handleDeleteStore = (uuid) => {\n        storeData.removeItem(uuid).then(reloadStore);\n    }\n\n    const handleSave = () => {\n        const selectionPixels = Renderer.getMapSelectionPixels();\n        storeData.setItem(uuid(), {name: \"New Selection\", \n                                   width: selectionPixels.width,\n                                   height: selectionPixels.height,\n                                   data: selectionPixels.buffer}).then(reloadStore);\n    }\n\n    const handleImport = () => {\n        let input = document.createElement('input');\n        input.type = 'file';\n\n        input.onchange = e => { \n            var file = e.target.files[0]; \n            new Promise(function(resolve, reject) {\n                var reader = new FileReader();\n                reader.readAsArrayBuffer(file)\n            \n                reader.onload = readerEvent => {\n                    resolve([readerEvent.target.result, file.name.replace('.png','')]);\n                }\n        \n                reader.onerror = _readerEvent => {\n                    reject(reader.error);\n                }\n        \n                reader.onabort = _readerEvent => {\n                    reject(\"FileReader was aborted!\");\n                }\n            }).then(([buffer, filename]) => {\n                let img = UPNG.decode(buffer);\n                let pixels = new Uint8Array(UPNG.toRGBA8(img)[0]);\n                storeData.setItem(uuid(), {name: filename, \n                    width: img.width,\n                    height: img.height,\n                    data: pixels}).then(reloadStore);\n            })\n        }\n\n        input.click();\n    }\n\n    const handleLabelStore = (uuid, label) => {\n        storeData.getItem(uuid).then((item) => {\n            item.name = label;\n            storeData.setItem(uuid, item).then(reloadStore);\n        })\n    }\n\n    const handleExportStore = (uuid) => {\n        storeData.getItem(uuid).then((item) => {\n            console.log(item.data);\n            let png = UPNG.encode([item.data.buffer], item.width, item.height, 0)\n            let blob = new Blob([png], {type: \"image/png\"});\n            let url = URL.createObjectURL(blob); \n            let fileLink = document.createElement('a');\n            fileLink.href = url;\n            fileLink.download = item.name;\n            fileLink.click();\n        })\n    }\n    \n    let storeList = []\n    for (const [key, value] of Object.entries(uuids)) {\n        storeList.push(\n            <StoreItem\n                label={value}\n                onClick={() => handleLoad(key)}\n                onDelete={()=> handleDeleteStore(key)}\n                onLabel={(label) => handleLabelStore(key, label)}\n                onExport={() => handleExportStore(key)}\n            />\n        )\n    }\n\n    return(\n        <div className=\"stack no-pointer-events\" style={{position: \"relative\"}}>\n            <div className=\"overlay d-flex flex-column-reverse pointer-events\" style={{overflowY: \"overlay\", height: \"80%\", right: 0, bottom: 0}}>\n                <div className=\"align-self-end d-grid gap-2\">\n                {storeList}\n                </div>\n            </div>\n            <div  className=\"overlay\">\n            <ButtonToolbar style={{flexDirection: \"column\", width: \"20pt\"}}>\n            <ButtonGroup vertical>\n                <Button\n                    onClick={handleDelete}\n                ><i className=\"bi-trash-fill\"></i></Button>\n            </ButtonGroup>\n            <br />\n            <ButtonGroup vertical>\n                <Button\n                    disabled={penMode===\"draw\"}\n                    onClick={() => {handlePenMode(\"draw\")}}\n                ><i className=\"bi-pencil-fill\"></i></Button>\n                <Button\n                    disabled={penMode===\"erase\"}\n                    onClick={() => {handlePenMode(\"erase\")}}\n                ><i className=\"bi-eraser-fill\"></i></Button>\n            </ButtonGroup>\n            <br />\n            <ButtonGroup vertical>\n                <Button\n                    disabled={penSize===40}\n                    onClick={() => {handlePenSize(40)}}\n                ><i style={{\"fontSize\": \"8pt\"}} className=\"bi-circle-fill\"></i></Button>\n                <Button\n                    disabled={penSize===20}\n                    onClick={() => {handlePenSize(20)}}\n                ><i style={{\"fontSize\": \"6pt\"}} className=\"bi-circle-fill\"></i></Button>\n                <Button\n                    disabled={penSize===10}\n                    onClick={() => {handlePenSize(10)}}\n                ><i style={{\"fontSize\": \"4pt\"}} className=\"bi-circle-fill\"></i></Button>\n            </ButtonGroup>\n            <br />\n            <ButtonGroup vertical>\n                    <Button\n                        onClick={handleSave}\n                    ><i className=\"fas fa-save\"></i></Button>\n                    <Button\n                        onClick={handleImport}\n                    ><i className=\"bi-upload\"></i></Button>\n            </ButtonGroup>\n            </ButtonToolbar>\n            </div>\n        </div>\n    );\n}\n\nexport default MapTools","import React, { useRef, useEffect } from 'react'\n\nimport Plots from './Plots'\nimport MapTools from './MapTools'\n\nconst Views= props => {\n    const mainRef = useRef(null);\n    const mapRef = useRef(null);\n\n    const onMainView = props.onMainView;\n    const onMapView = props.onMapView;\n\n    useEffect(() => {\n        onMainView(mainRef.current);\n        onMapView(mapRef.current);\n    }, [onMainView, onMapView]);\n\n    return(\n        <>\n        <div className=\"views d-flex flex-col\">\n            <div className=\"flex-fill d-flex flex-row\">\n                <div className=\"flex-fill stack-base\">\n                    <div className=\"stack\" ref={mainRef}></div>\n                </div>\n                <div className=\"v-divider\"></div>\n                <div className=\"flex-fill d-flex flex-column\">\n                    <div className=\"flex-fill stack-base\">\n                        <div className=\"stack\"ref={mapRef}></div>\n                        <MapTools />\n                    </div>\n                    <div className=\"h-divider\"></div>\n                    <div className=\"flex-fill\">\n                        <Plots\n                            localHistogram={props.localHistogram}\n                            globalHistogram={props.globalHistogram}\n                            labelsHistogram={props.labelsHistogram}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default Views","import React, {Component} from 'react'\n\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nclass InputVector extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n        this.handleChangeX = this.handleChangeX.bind(this);\n        this.handleChangeY = this.handleChangeY.bind(this);\n        this.handleChangeZ = this.handleChangeZ.bind(this);\n\t}\n\n    handleChangeX(e) {\n        this.props.onChange({\n            x: e.target.value,\n            y: this.props.value.y,\n            z: this.props.value.z\n        });\n    }\n\n    handleChangeY(e) {\n        this.props.onChange({\n            x: this.props.value.x,\n            y: e.target.value,\n            z: this.props.value.z\n        });\n    }\n\n    handleChangeZ(e) {\n        this.props.onChange({\n            x: this.props.value.x,\n            y: this.props.value.y,\n            z: e.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Voxel Size</InputGroup.Text>\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"x\"\n                    value={this.props.value.x}\n                    onChange={this.handleChangeX}\n                />\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"y\"\n                    value={this.props.value.y}\n                    onChange={this.handleChangeY}\n                />\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"z\"\n                    value={this.props.value.z}\n                    onChange={this.handleChangeZ}\n                />\n            </InputGroup>\n        )\n    }\n}\n\nexport default InputVector","import React, {Component} from 'react'\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nimport InputVector from './InputVector'\n\nclass ImportDialog extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\n    this.state = {\n      fileProtein: \"\",\n      fileSegmentation: \"\",\n      voxelSize: {x: \"\", y: \"\", z: \"\"},\n      working: false\n    }\n\n    this.handleClickImport = this.handleClickImport.bind(this);\n\n    this.handleChangeFileProtein = this.handleChangeFileProtein.bind(this);\n    this.handleChangeFileSegmentation = this.handleChangeFileSegmentation.bind(this);\n    this.handleChangeVoxelSize = this.handleChangeVoxelSize.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\t}\n\n  handleChangeFileProtein(e) {\n    this.setState({\n      fileProtein: e.target.files[0]\n    })\n  }\n\n  handleChangeFileSegmentation(e) {\n    this.setState({\n      fileSegmentation: e.target.files[0]\n    })\n  }\n\n  handleChangeVoxelSize(value) {\n    this.setState({\n      voxelSize: value\n    })\n  }\n\n  async handleClickImport(e) {\n    this.setState({\n      working: true\n    })\n\n    this.props.onImport(this.state.fileProtein, this.state.fileSegmentation, this.state.voxelSize);\n\n    this.setState({\n      working: false\n    })\n  }\n\n  handleClose(e) {\n    this.props.onClose();\n  }\n\n  render() {\n    let formValid;\n    if (this.state.fileProtein\n        && this.state.fileSegmentation\n        && this.state.voxelSize.x\n        && this.state.voxelSize.y\n        && this.state.voxelSize.z\n        && !this.state.working) formValid = true;\n    else formValid = false;\n\n    let alert;\n    if (this.props.error) {\n      alert = <Alert variant=\"danger\">{this.props.error}</Alert>\n    }\n\n    return (\n        <Modal show={this.props.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Import Data</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Protein Data</Form.Label>\n                    <Form.Control\n                      type=\"file\"\n                      onChange={this.handleChangeFileProtein}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Segmentation Data</Form.Label>\n                    <Form.Control\n                      type=\"file\"\n                      onChange={this.handleChangeFileSegmentation}\n                    />\n                </Form.Group>\n                <InputVector\n                  value={this.state.voxelSize}\n                  onChange={this.handleChangeVoxelSize}\n                />\n            </Form>\n            {alert}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"primary\"\n              disabled={!formValid}\n              onClick={this.handleClickImport}\n            >\n              Import\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    )\n  }\n}\n\nexport default ImportDialog","import React, {Component} from 'react';\n\nimport \"../App.css\";\n\nimport Alert from 'react-bootstrap/Alert';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass LabeledProgressBar extends Component {\n\trender() {\n\t\tlet variant = \"\"\n\t\tif (this.props.progress >= 100) variant = \"success\";\n\t\tif (this.props.error) variant = \"danger\";\n\n\t\tlet animated = (this.props.progress < 100 && !this.props.error);\n\n\t\tlet alert;\n\t\tif (this.props.error) {\n\t\t\talert = <Alert variant=\"danger\">{this.props.error}</Alert>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"labeled-progress-bar\">\n\t\t\t\t<ProgressBar>\n\t\t\t\t\t<div className=\"label-front\" style={{clipPath: `inset(0 ${100-this.props.progress}% 0 0)`}}>{this.props.label}</div>\n\t\t\t\t\t<div className=\"label-back\">{this.props.label}</div>\n\t\t\t\t\t<ProgressBar striped variant={variant} animated={animated} now={this.props.progress} />\n\t\t\t\t</ProgressBar>\n\t\t\t\t{alert}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LabeledProgressBar;","import React, {Component} from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\n\nimport LabeledProgressBar from './LabeledProgressBar';\n\nclass ImportProgress extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// TODO: Add all data here as state.\n\t\tthis.state = {\n\t\t\tproteinProgress: 0,\n\t\t\tsegmentationProgress: 0,\n\t\t\tsdfProgress: 0,\n\t\t\tproteinError: \"\",\n\t\t\tsegmentationError: \"\",\n\t\t\tsdfError: \"\"\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\n\t}\n  \n\tcomponentWillUnmount() {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal backdrop=\"static\" show={this.props.show}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>Importing Data...</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<div className=\"d-grid gap-3\">\n\t\t\t\t\t<LabeledProgressBar \n\t\t\t\t\t\tprogress={this.props.proteinProgress}\n\t\t\t\t\t\terror={this.props.proteinError}\n\t\t\t\t\t\tlabel=\"Decode Protein TIFF...\"\n\t\t\t\t\t/>\n\t\t\t\t\t<LabeledProgressBar \n\t\t\t\t\t\tprogress={this.props.segmentationProgress}\n\t\t\t\t\t\terror={this.props.segmentationError}\n\t\t\t\t\t\tlabel=\"Decode Segmentation TIFF...\"\n\t\t\t\t\t/>\n\t\t\t\t\t<LabeledProgressBar \n\t\t\t\t\t\tprogress={this.props.sdfProgress}\n\t\t\t\t\t\terror={this.props.sdfError}\n\t\t\t\t\t\tlabel=\"Compute Distance Fields...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nexport default ImportProgress","module.exports = __webpack_public_path__ + \"static/js/histogram-worker.ff80e009.chunk.worker.js\"","module.exports = __webpack_public_path__ + \"static/js/sdf-worker.d17a835f.chunk.worker.js\"","module.exports = __webpack_public_path__ + \"static/js/tiff-worker.a6adfe81.chunk.worker.js\"","// \"Abstract\" class for the volume renderer.\n\nclass VolumeRenderer {\n\t// Renders the volume.\n\trender() { };\n\n\tsetVolumeSize(width, height, depth) { };\n\n\t// Set the protein data.\n\tsetProteinData(texture) { };\n\n\tsetDistanceData(textures) { };\n\n\tsetIsovalue(value) { };\n\n\tsetCompartmentIndex(value) { };\n\t\n\tsetDisplayCompartments(value) { };\n\n\tsetDisplayProtein(value) { };\n\n\tresizeCallback() { };\n\t\n\tsetSkeleton(vec) { };\n\n\tselectionUpdated() { };\n\n\tsetDebugSamples(value) { };\n\n\tsetUseLod(value) { };\n}\n\nexport { VolumeRenderer };","import { VolumeRenderer } from '../volume_renderer.js'\n\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1);\n\nclass VolumeRendererDefault extends VolumeRenderer {\n\tvolumeTexture\n\tsdfTextures\n\n\tdom;\n\trenderer;\n\n\tvolumeSize;\n\n\trenderTargetGrid;\n\trenderTargetVolume;\n\n\tcamera;\n\tcontrols;\n\n\tcameraCompose;\n\n\tbox;\n\tgrid;\n\n\tmaterialMarchVolume;\n\tmaterialCompose;\n\n\tsceneGrid;\n\tsceneVolume;\n\tsceneCompose;\n\n\tvolumeDirty;\n\n\tconstructor(renderer, dom) {\n\t\tsuper();\n\t\tthis.dom = dom;\n\t\tthis.renderer = renderer;\n\n\t\tthis.camera = new THREE.PerspectiveCamera( 75, dom.clientWidth/dom.clientHeight, 0.1, 5000 );\n\t\t\n\t\tthis.controls = new OrbitControls(this.camera, dom);\n\t\tthis.camera.position.y = -85;\n\t\tthis.controls.update();\n\n\t\tthis.materialMarchVolume = new THREE.RawShaderMaterial( {\n\t\t\tglslVersion: THREE.GLSL3,\n\t\t\tuniforms: {\n\t\t\t\tmodelview: { value: this.camera.matrixWorldInverse },\n\t\t\t\tproj: {value: this.camera.projectionMatrix },\n\t\t\t\tresolution: { value: new THREE.Vector2(0, 0) },\n\t\t\t\tvolume0: { value:null },\n\t\t\t\tvolume1: { value:null },\n\t\t\t\tvolume2: { value:null },\n\t\t\t\tvolume3: { value:null },\n\t\t\t\tvolume4: { value:null },\n\t\t\t\tvolume5: { value:null },\n\t\t\t\tvolume6: { value:null },\n\t\t\t\tvolume7: { value:null },\n\t\t\t\tvolume8: { value:null },\n\t\t\t\tvolume9: { value:null },\n\t\t\t\tvolumeSize: { value: null },\n\t\t\t\ttexDepth: { value: null },\n\t\t\t\tsdf: { value: null },\n\t\t\t\tisovalue: { value: null },\n\t\t\t\tdisplayProtein: { value: false },\n\t\t\t\tdisplayCompartments: { value: false },\n\t\t\t\tselection: { value: false },\n\t\t\t\tprojection: { value: false },\n\t\t\t\tdebugSamples: { value: false },\n\t\t\t\tuseLod: { value: true }\n\t\t\t},\n\t\t\tvertexShader: require('./shaders/volume_renderer_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/volume_renderer_frag.glsl'),\n\t\t\tside: THREE.BackSide,\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.materialCompose = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/post_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/post_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\ttexGrid: { value: null },\n\t\t\t\ttexVolume: { value: null }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tthis.sceneGrid = new THREE.Scene();\n\t\tconst size = 10;\n\t\tconst divisions = 10;\n\t\tthis.grid = new THREE.GridHelper( size, divisions );\n\t\tthis.grid.rotateX(0.5*Math.PI);\n\t\tthis.sceneGrid.add(this.grid);\n\t\t\n\t\tthis.grid.onBeforeRender = ( renderer, scene, camera, geometry, material, group ) => {\n\t\t\tvar pos = this.controls.target;\n\t\t\tthis.grid.position.x = pos.x;\n\t\t\tthis.grid.position.y = pos.y;\n\t\t\tthis.grid.position.z = pos.z;\n\t\t\tthis.grid.updateMatrixWorld();\n\t\t};\n\n\t\tconst geometry = new THREE.BoxGeometry();\n\t\tthis.sceneVolume = new THREE.Scene();\n\t\tthis.box = new THREE.Mesh(geometry, this.materialMarchVolume)\n\t\tthis.sceneVolume.add(this.box);\n\n\t\tthis.sceneCompose = new THREE.Scene();\n\t\tthis.cameraCompose = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialCompose);\n\t\tthis.sceneCompose.add(quad);\n\n\t\tthis.renderTargetVolume = new THREE.WebGLRenderTarget(0, 0);\n\t\tthis.renderTargetGrid = new THREE.WebGLRenderTarget(0, 0);\n\t\tthis.renderTargetGrid.depthTexture = new THREE.DepthTexture();\n\n\t\t\n\t\tthis.materialMarchVolume.uniforms.texDepth.value = this.renderTargetGrid.depthTexture;\n\t\tthis.materialCompose.uniforms.texGrid.value = this.renderTargetGrid.texture;\n\t\tthis.materialCompose.uniforms.texVolume.value = this.renderTargetVolume.texture;\n\n\t\tthis.volumeDirty = true;\n\n\t\tthis.controls.addEventListener('change', () => {\n\t\t\tthis.volumeDirty = true;\n\t\t} );\n\t\t\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.resizeCallback();\n\t\t});\n\t\tthis.resizeCallback();\n\t};\n\n\t// Renders the volume.\n\trender() {\n\t\tif (!this.volumeTexture) return;\n\t\tif (!this.sdfTextures) return;\n\t\tif (!this.volumeDirty) return;\n\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst left   = rect.left;\n\t\tconst bottom = window.innerHeight - rect.bottom;\n\n\t\tthis.renderer.setViewport(left, bottom, width, height);\n\t\tthis.renderer.setScissor(left, bottom, width, height);\n\t\tthis.renderer.setScissorTest(true);\n\t\t\n\t\tthis.controls.update();\n\n\t\tlet gl = this.renderer.getContext();\n\t\tthis.renderer.setRenderTarget(this.renderTargetGrid);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneGrid, this.camera);\n\n\t\tthis.renderer.setRenderTarget(this.renderTargetVolume);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneVolume, this.camera);\n\n\t\tthis.renderer.setRenderTarget(null);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneCompose, this.cameraCompose);\n\n\t\tthis.volumeDirty = false;\n\t};\n\n\tselectionUpdated() {\n\t\tthis.volumeDirty = true;\n\t}\n\n\tsetVolumeSize(width, height, depth) { \n\t\tthis.volumeSize = new THREE.Vector3(width, height, depth);\n\t\tthis.box.geometry = new THREE.BoxGeometry(this.volumeSize.x, this.volumeSize.y, this.volumeSize.z);\n\t\tthis.materialMarchVolume.uniforms.volumeSize.value = this.volumeSize;\n\t\tthis.volumeDirty = true;\n\t };\n\n\t// Set the protein data.\n\tsetProteinData(texture) {\n\t\tthis.volumeTexture = texture;\n\t\t\n\t\tfor (let i = 0; i < 9; ++i) {\n\t\t\tthis.materialMarchVolume.uniforms[\"volume\" + i].value = this.volumeTexture[i];\n\t\t}\n\t\t\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetDistanceData(textures, dims) {\n\t\tthis.sdfTextures = textures;\n\t\tthis.materialMarchVolume.uniforms.sdf.value = this.sdfTextures[0];\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetIsovalue(value) {\n\t\tthis.materialMarchVolume.uniforms.isovalue.value = value;\n\t\t//this.volumeDirty = true;\n\t}\n\n\tsetCompartmentIndex(value) {\n\t\tthis.materialMarchVolume.uniforms.sdf.value = this.sdfTextures[value];\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetDisplayCompartments(value) {\n\t\tthis.materialMarchVolume.uniforms.displayCompartments.value = value;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetDisplayProtein(value) {\n\t\tthis.materialMarchVolume.uniforms.displayProtein.value = value;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetSelectionTexture(texture) {\n\t\tthis.materialMarchVolume.uniforms.selection.value = texture;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tsetProjectionTexture(texture) {\n\t\tthis.materialMarchVolume.uniforms.projection.value = texture;\n\t\tthis.volumeDirty = true;\n\t};\n\n\tresizeCallback() {\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\t//const left   = rect.left;\n\t\t//const bottom = window.innerHeight - rect.bottom;\n\t\t\n\t\tthis.camera.aspect = width/height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.renderTargetVolume.setSize(width, height);\n\t\tthis.renderTargetGrid.setSize(width, height);\n\t\tthis.materialMarchVolume.uniforms.resolution.value = new THREE.Vector2(width, height);\n\n\t\tthis.renderTargetGrid.depthTexture = new THREE.DepthTexture();\n\t\tthis.materialMarchVolume.uniforms.texDepth.value = this.renderTargetGrid.depthTexture;\n\n\t\tthis.volumeDirty = true;\n\t}\n\n\tsetSkeleton(vec) {\n\t\tvar geom = new THREE.BufferGeometry();\n\n\t\tgeom.setAttribute( 'position', new THREE.BufferAttribute( vec, 3 ) );\n\n\t\tvar points = new THREE.Points(geom);\n\n\t\tpoints.position.x = -0.5*this.volumeSize.x;\n\t\tpoints.position.y = -0.5*this.volumeSize.y;\n\t\tpoints.position.z = -0.5*this.volumeSize.z;\n\n\t\tthis.sceneGrid.add(points);\n\t}\n\n\tsetDebugSamples(value) {\n\t\tthis.materialMarchVolume.uniforms.debugSamples.value = value;\n\t}\n\n\tsetUseLod(value) {\n\t\tthis.materialMarchVolume.uniforms.useLod.value = value;\n\t}\n}\n\nexport { VolumeRendererDefault };","import * as THREE from 'three';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n//import { VolumeRendererReprojected } from './volume/reprojected/volume_renderer_reprojected.js'\nimport { VolumeRendererDefault} from './volume/default/volume_renderer_default.js'\nimport { MapRenderer } from \"./map/map_renderer.js\"\n\nvar stats = new Stats();\nstats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\ndocument.body.appendChild( stats.dom );\n\nvar canvas;\nvar mainView;\nvar mapView;\n\nvar renderer;\n\nvar volumeRenderer = null;\nvar mapRenderer = null;\n// Configure coordinate system to use Z as up.\n\nvar onSelectionUpdated = () => {};\nvar onProjectionUpdated = () => {};\nvar onSelectionDone = () => {};\n\nasync function main(initCanvas, initMainView, initMapView) {\n\tcanvas = initCanvas;\n\tmainView = initMainView;\n\tmapView = initMapView;\n\trenderer = new THREE.WebGLRenderer({canvas: canvas, preserveDrawingBuffer: true});\n\trenderer.autoClearColor = false;\n\tawait init();\n\tanimate();\n}\n\nfunction setOnSelectionUpdated(callback) {\n\tonSelectionUpdated = callback;\n}\n\nfunction setOnProjectionUpdated(callback) {\n\tonProjectionUpdated = callback;\n}\n\nfunction setOnSelectionDone(callback) {\n\tonSelectionDone = callback;\n}\n\nfunction setVolumeSize(size) {\n\tvolumeRenderer.setVolumeSize(size[0], size[1], size[2]);\n}\n\nfunction setProteinData(pyramid, dims) {\n\tlet textures = []\n\tlet w = dims[0];\n\tlet h = dims[1];\n\tlet d = dims[2];\n\tfor (let i = 0; i < pyramid.length; ++i) {\n\t\tconst texture = new THREE.DataTexture3D(pyramid[i], w, h, d);\n\t\ttexture.format = THREE.RGFormat;\n\t\ttexture.type = THREE.UnsignedByteType;\n\t\ttexture.internalFormat = 'RG8';\n\t\ttexture.minFilter = THREE.LinearFilter;\n\t\ttexture.magFilter = THREE.LinearFilter;\n\t\ttexture.generateMipmaps = false;\n\t\ttexture.unpackAlignment = 1;\n\n\t\tw = Math.ceil(w/2.0);\n\t\th = Math.ceil(h/2.0);\n\t\td = Math.ceil(d/2.0);\n\n\t\ttextures.push(texture);\n\t}\n\n\t\n\tvolumeRenderer.setProteinData(textures);\n\tmapRenderer.setProteinData(textures[0]);\n}\n\nfunction setDistanceFieldData(arrays, dims) {\n\tlet textures = [];\n\tfor (var i = 0; i < arrays.length; ++i) {\n\t\tconst tex = new THREE.DataTexture3D(arrays[i], dims[0], dims[1], dims[2]);\n\t\ttex.format = THREE.RedFormat;\n\t\ttex.minFilter = THREE.LinearFilter;\n\t\ttex.magFilter = THREE.LinearFilter;\n\t\ttex.unpackAlignment = 1;\n\n\t\ttextures.push(tex);\n\t}\n\tvolumeRenderer.setDistanceData(textures);\n\tmapRenderer.setDistanceData(textures);\n}\n\nasync function init() {\n\tvolumeRenderer = new VolumeRendererDefault(renderer, mainView);\n\tmapRenderer = new MapRenderer(renderer, mapView, handleSelectionUpdated, handleProjectionUpdated, handleSelectionDone);\n\n\tvolumeRenderer.setSelectionTexture(mapRenderer.getSeletionTexture());\n\tvolumeRenderer.setProjectionTexture(mapRenderer.getProjectionTexture());\n}\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n\t\n\tvolumeRenderer.render();\n\tmapRenderer.render();\n\n\tstats.update();\n}\n\nfunction handleSelectionDone() {\n\tconsole.log(\"SELECTION DONE\")\n\tonSelectionDone();\n}\n\nfunction handleSelectionUpdated() {\n\tvolumeRenderer.selectionUpdated();\n\tonSelectionUpdated(mapRenderer.getSelectionPixels());\n}\n\nfunction handleProjectionUpdated() {\n\tonProjectionUpdated(mapRenderer.getProjectionPixels());\n}\n\nfunction setIsovalue(value) {\n\tvolumeRenderer.setIsovalue(value);\n\tmapRenderer.setIsovalue(value);\n}\n\nfunction setDisplayProtein(value) {\n\tvolumeRenderer.setDisplayProtein(value);\n}\n\nfunction setDisplayCompartment(value) {\n\tvolumeRenderer.setDisplayCompartments(value);\n}\n\nfunction setCompartmentIndex(index) {\n\tvolumeRenderer.setCompartmentIndex(index);\n\tmapRenderer.setCompartmentIndex(index);\n}\n\nfunction setSkeleton(vec) {\n\tvolumeRenderer.setSkeleton(vec);\n}\n\nfunction deleteSelection() {\n\tif (mapRenderer) {\n\t\tmapRenderer.deleteSelection();\n\t}\n}\n\nfunction getMapSelectionPixels() {\n\treturn mapRenderer.getSelectionPixels();\n}\n\nfunction getMapProjectionPixels() {\n\treturn mapRenderer.getProjectionPixels();\n}\n\nfunction setMapSelectionPixels(pixels, width, height) {\n\tconst texture = new THREE.DataTexture( pixels, width, height, THREE.RGBAFormat );\n\tmapRenderer.setSelectionFromTexture(texture);\n}\n\nfunction setDebugSamples(value) {\n\tvolumeRenderer.setDebugSamples(value);\n}\n\nfunction setUseLod(value) {\n\tvolumeRenderer.setUseLod(value);\n}\n\nfunction setPenMode(mode) {\n\tif (mapRenderer) {\n\t\tmapRenderer.setPenMode(mode);\n\t}\n}\n\nfunction setPenSize(value) {\n\tif (mapRenderer) {\n\t\tmapRenderer.setPenSize(value);\n\t}\n}\n\nexport { main, setOnSelectionUpdated, setOnProjectionUpdated, setOnSelectionDone, setDistanceFieldData, setProteinData, setIsovalue, setDisplayProtein, setDisplayCompartment, setCompartmentIndex, setVolumeSize, deleteSelection, setSkeleton, setMapSelectionPixels, getMapSelectionPixels, getMapProjectionPixels, setDebugSamples, setUseLod, setPenMode, setPenSize};","import * as THREE from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass MapRenderer {\n    dom;\n    renderer;\n\n    camera;\n\n    sceneSelection;\n    materialSelection;\n\n\tsceneProjection;\n\tmaterialProjection;\n\n\tsceneMap;\n\tmaterialMap;\n\n\tplaneMap;\n\n\tvolumeTexture;\n\tsdfTextures;\n\n\trenderTargetSelection;\n\trenderTargetProjection;\n\n\tprojectionDirty;\n\tselectionDirty;\n\n\tconstructor(renderer, dom, onSelectionUpdated, onProjectionUpdated, onSelectionDone) {\n\t\tthis.dom = dom;\n\t\tthis.renderer = renderer;\n\n\t\tthis.onSelectionUpdated = onSelectionUpdated;\n\t\tthis.onProjectionUpdated = onProjectionUpdated;\n\t\tthis.onSelectionDone = onSelectionDone;\n\n        this.materialProjection = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/mip_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/mip_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\tvolume: { value: null },\n\t\t\t\tsdf: { value: null },\n\t\t\t\tisovalue: { value: null }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.materialSelection = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/selection_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/selection_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\tclear: { value: true },\n\t\t\t\tlastPosition: { value: new THREE.Vector2(0.0, 0.0) },\n\t\t\t\tposition: { value: new THREE.Vector2(0.0, 0.0) },\n\t\t\t\tdepressed: { value: false },\n\t\t\t\tpenMode: {value: 0 },\n\t\t\t\tpenSize: {value: 8.0 },\n\t\t\t\tresolution: {value: 1024},\n\t\t\t\trestore: {value: null },\n\t\t\t\tdoRestore: { value: false }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.materialMap = new THREE.ShaderMaterial({\n\t\t\tvertexShader: require('./shaders/map_vert.glsl'),\n\t\t\tfragmentShader: require('./shaders/map_frag.glsl'),\n\t\t\tuniforms: {\n\t\t\t\tselection: { value: null },\n\t\t\t\tprojection: { value: null }\n\t\t\t},\n\t\t\ttransparent: true\n\t\t});\n\n\t\tthis.renderTargetSelection = new THREE.WebGLRenderTarget(1024, 1024);\n\t\tthis.renderTargetProjection = new THREE.WebGLRenderTarget(1024, 1024);\n\n\t\tconst aspect = dom.clientWidth/dom.clientHeight\n\n\t\tthis.camera = new THREE.OrthographicCamera( -aspect, aspect, 1, - 1, 0, 2 );\n\t\tthis.controls = new OrbitControls(this.camera, dom);\n\t\tthis.camera.position.z = 1.0;\n\t\tthis.controls.enableRotate = false;\n\t\tthis.controls.update();\n\n\t\t{\n\t\tthis.cameraProjection = new THREE.OrthographicCamera(-1, 1, 1, - 1, 0, 2 );\n\t\tthis.sceneProjection = new THREE.Scene();\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialProjection);\n\t\tthis.planeMap = quad;\n\t\tthis.sceneProjection.add(quad);\n\t\t}\n\n\t\t{\n\t\tthis.cameraSelection = new THREE.OrthographicCamera(-1, 1, 1, - 1, 0, 2 );\n\t\tthis.sceneSelection = new THREE.Scene();\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialSelection);\n\t\tthis.sceneSelection.add(quad);\n\t\t}\n\n\t\t{\n\t\tthis.sceneMap = new THREE.Scene();\n\t\tlet plane = new THREE.PlaneGeometry( 2, 2 );\n\t\tlet quad = new THREE.Mesh(plane, this.materialMap);\n\t\tthis.sceneMap.add(quad);\n\t\tthis.sceneMap.add(this.camera);\n\t\t}\n\n\t\tthis.materialMap.uniforms.projection.value = this.renderTargetProjection.texture;\n\t\tthis.materialMap.uniforms.selection.value = this.renderTargetSelection.texture;\n\n\t\tthis.projectionDirty = false;\n\t\tthis.selectionDirty = false;\n\n\t\tthis.dom.addEventListener('mousemove', e => { this.mouseMove(e); });\n\t\tthis.dom.addEventListener('mousedown', e => { this.mouseDown(e);});\n\t\tthis.dom.addEventListener('mouseup', e => { this.mouseUp(e);});\n\t\tthis.dom.addEventListener('mouseout', e => { this.mouseOut(e);});\n\t\t\t\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.resizeCallback();\n\t\t});\n\t\tthis.resizeCallback();\n    };\n\n\tgetMousePosition(e) {\n\t\tconst raycaster = new THREE.Raycaster();\n\t\tconst mouse = new THREE.Vector2();\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\tmouse.x = (e.clientX - rect.left) / (rect.right - rect.left) * 2.0 - 1.0; //x position within the element.\n\t\tmouse.y = 1.0 - (e.clientY - rect.top) / (rect.bottom - rect.top) * 2.0; //y position within the element.\n\t\traycaster.setFromCamera( mouse.clone(), this.camera );\n\t\tconst intersects = raycaster.intersectObject(this.planeMap);\n\n\t\tif (intersects.length > 0) {\n\t\t\treturn intersects[0].uv;\n\t\t}\n\t\treturn null;\n\t}\n\n\tmouseDown(e) {\n\t\tif (e.button === 0) {\n\t\t\tconst mouse = this.getMousePosition(e);\n\t\t\tif (mouse) {\n\t\t\t\tthis.materialSelection.uniforms.position.value = mouse;\n\t\t\t\tthis.materialSelection.uniforms.lastPosition.value = this.materialSelection.uniforms.position.value;\n\t\t\t\tthis.selectionDirty = true;\n\t\t\t\tthis.materialSelection.uniforms.depressed.value = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tmouseMove(e) {\n\t\tif (e.button === 0) {\n\t\t\tif (this.materialSelection.uniforms.depressed.value) {\n\t\t\t\tconst mouse = this.getMousePosition(e);\n\t\t\t\tif (mouse) {\n\t\t\t\t\tthis.materialSelection.uniforms.lastPosition.value = this.materialSelection.uniforms.position.value;\n\t\t\t\t\tthis.materialSelection.uniforms.position.value = mouse;\n\t\t\t\t\tthis.selectionDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmouseOut(e) {\n\t\tif (e.button === 0) {\n\t\t\tthis.materialSelection.uniforms.depressed.value = false;\n\t\t}\n\t}\n\n\tmouseUp(e) {\n\t\tif (e.button === 0) {\n\t\t\tthis.materialSelection.uniforms.depressed.value = false;\n\t\t\tthis.onSelectionDone();\n\t\t}\n\t}\n\n\trenderProjection() {\n\t\tthis.renderer.setViewport(0, 0, 1024, 1024);\n\t\tthis.renderer.setScissorTest(false);\n\t\tthis.renderer.setRenderTarget(this.renderTargetProjection);\n\t\tthis.renderer.render(this.sceneProjection, this.cameraProjection);\n\t\tthis.onProjectionUpdated();\n\t\tthis.projectionDirty = false;\n\t}\n\n\trenderSelection() {\n\t\tthis.renderer.setViewport(0, 0, 1024, 1024);\n\t\tthis.renderer.setScissorTest(false);\n\t\tthis.renderer.setRenderTarget(this.renderTargetSelection);\n\t\tthis.renderer.render(this.sceneSelection, this.cameraSelection);\n\t\tthis.onSelectionUpdated();\n\t\tif (this.materialSelection.uniforms.clear.value) {\n\t\t\tthis.materialSelection.uniforms.clear.value = false;\n\t\t\tthis.onSelectionDone();\n\t\t}\n\n\t\tif (this.materialSelection.uniforms.doRestore.value) {\n\t\t\tthis.materialSelection.uniforms.doRestore.value = false;\n\t\t\tthis.onSelectionDone();\n\t\t}\n\t\tthis.selectionDirty = false;\n\t}\n\n\trenderMap() {\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\t\t\n\t\tconst width  = rect.right - rect.left;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst left   = rect.left;\n\t\tconst bottom = window.innerHeight - rect.bottom;\n\t\t\n\t\tthis.renderer.setViewport(left, bottom, width, height);\n\t\tthis.renderer.setScissor(left, bottom, width, height);\n\t\tthis.renderer.setScissorTest(true);\n\n\t\tthis.renderer.setRenderTarget(null);\n\t\tlet gl = this.renderer.getContext();\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis.renderer.render(this.sceneMap, this.camera);\n\t}\n\n\t// Renders the volume.\n\trender() {\n\t\tif (this.selectionDirty) this.renderSelection();\n\t\tif (this.projectionDirty) this.renderProjection();\n\n\t\tthis.renderMap();\n\t};\n\n\tsetVolumeSize(width, height, depth) { };\n\n\t// Set the protein data.\n\tsetProteinData(texture) {\n\t\tthis.volumeTexture = texture;\n\t\tthis.materialProjection.uniforms.volume.value = this.volumeTexture;\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetDistanceData(textures) {\n\t\tthis.sdfTextures = textures;\n\t\tthis.materialProjection.uniforms.sdf.value = this.sdfTextures[0];\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetIsovalue(value) {\n\t\tthis.materialProjection.uniforms.isovalue.value = value;\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetCompartmentIndex(value) {\n\t\tthis.materialProjection.uniforms.sdf.value = this.sdfTextures[value];\n\t\tthis.projectionDirty = true;\n\t};\n\n\tsetPenSize(value) {\n\t\tthis.materialSelection.uniforms.penSize.value = value;\n\t};\n\n\tsetPenMode(mode) {\n\t\tif (mode === \"draw\") {\n\t\t\tthis.materialSelection.uniforms.penMode.value = 0;\n\t\t} else {\n\t\t\tthis.materialSelection.uniforms.penMode.value = 1;\n\t\t}\n\t}\n\n\tgetSeletionTexture() {\n\t\treturn this.renderTargetSelection.texture;\n\t};\n\n\tgetSelectionPixels() {\n\t\tvar pixels = {\n\t\t\twidth: this.renderTargetSelection.width,\n\t\t\theight: this.renderTargetSelection.height,\n\t\t\tbuffer: new Uint8Array(this.renderTargetSelection.width*this.renderTargetSelection.width*4)\n\t\t}\n\t\tthis.renderer.readRenderTargetPixels(this.renderTargetSelection, 0, 0, pixels.width, pixels.height, pixels.buffer);\n\t\treturn pixels;\n\t};\n\n\tsetSelectionFromTexture(texture) {\n\t\tthis.materialSelection.uniforms.doRestore.value = true;\n\t\tthis.materialSelection.uniforms.restore.value = texture;\n\t\tthis.selectionDirty = true;\n\t}\n\n\tgetProjectionPixels() {\n\t\tvar pixels = {\n\t\t\twidth: this.renderTargetProjection.width,\n\t\t\theight: this.renderTargetProjection.height,\n\t\t\tbuffer: new Uint8Array(this.renderTargetProjection.width*this.renderTargetProjection.width*4)\n\t\t}\n\t\tthis.renderer.readRenderTargetPixels(this.renderTargetProjection, 0, 0, pixels.width, pixels.height, pixels.buffer);\n\t\treturn pixels;\n\t}\n\n\tgetProjectionTexture() {\n\t\treturn this.renderTargetProjection.texture;\n\t}\n\n\tdeleteSelection() {\n\t\tthis.materialSelection.uniforms.clear.value = true;\n\t\tthis.selectionDirty = true;\n\t}\n\n\tresizeCallback() {\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t\n\t\tconst aspect = this.dom.clientWidth/this.dom.clientHeight\n\t\t\n\t\tthis.camera.left = -aspect;\n\t\tthis.camera.right = aspect;\n\t\tthis.camera.updateProjectionMatrix();\n\t};\n}\n\nexport { MapRenderer };","module.exports = \"in vec4 position;\\nuniform mat4 modelview;\\nuniform mat4 proj;\\nuniform vec3 cameraPos;\\nout vec3 vOrigin;\\nout vec3 vDirection;\\n\\nvoid main() {\\n    vOrigin = vec3( inverse( modelview ) * vec4( 0.0, 0.0, 0.0, 1.0 ) ).xyz;\\n    vDirection = position.xyz - vOrigin;\\n    gl_Position = proj * modelview * position;\\n}\"","module.exports = \"precision highp float;\\nprecision highp sampler3D;\\n\\nout vec4 FragColor;\\n\\nuniform sampler3D volume0;\\nuniform sampler3D volume1;\\nuniform sampler3D volume2;\\nuniform sampler3D volume3;\\nuniform sampler3D volume4;\\nuniform sampler3D volume5;\\nuniform sampler3D volume6;\\nuniform sampler3D volume7;\\nuniform sampler3D volume8;\\nuniform sampler3D volume9;\\n\\nuniform sampler3D sdf;\\n\\nuniform sampler2D texDepth;\\n\\nuniform sampler2D selection;\\nuniform sampler2D projection;\\n\\nuniform mat4 modelview;\\nuniform mat4 proj;\\n\\nuniform vec3 volumeSize;\\nuniform vec2 resolution;\\n\\nuniform float isovalue;\\n\\nuniform bool displayProtein;\\nuniform bool displayCompartments;\\nuniform bool useLod;\\n\\nuniform bool debugSamples;\\n\\nin vec3 vOrigin;\\nin vec3 vDirection;\\n\\nvec2 rayBoxDst(vec3 bmin, vec3 bmax, vec3 p, vec3 d) {\\n    vec3 t0 = (bmin - p) / d;\\n    vec3 t1 = (bmax - p) / d;\\n    vec3 tmin = min(t0, t1);\\n    vec3 tmax = max(t0, t1);\\n\\n    float dstA = max(max(tmin.x, tmin.y), tmin.z);\\n    float dstB = min(tmax.x, min(tmax.y, tmax.z));\\n\\n    float dstToBox = max(0.0, dstA);\\n    float dstInsideBox = max(0.0, dstB - dstToBox);\\n    return vec2(dstToBox, dstInsideBox);\\n}\\n\\n// https://github.com/kbinani/colormap-shaders/blob/master/shaders/glsl/MATLAB_summer.frag\\nvec3 colormap(float x) {\\n    return vec3(clamp(x, 0.0, 1.0), clamp(0.5 * x + 0.5, 0.0, 1.0), 0.4);\\n}\\n\\nvec3 matlab_spring(float x) {\\n    return vec3(1.0, clamp(x, 0.0, 1.0), clamp(1.0 - x, 0.0, 1.0));\\n}\\n\\n// Sample the protein channel, local coordinates.\\nvec2 sampleProtein(vec3 p, int lod) {\\n    if (lod == 0) {\\n        return texture(volume0, p/volumeSize + 0.5).rg;\\n    } else if (lod == 1) {\\n        return texture(volume1, p/volumeSize + 0.5).rg;\\n    } else if (lod == 2) {\\n        return texture(volume2, p/volumeSize + 0.5).rg;\\n    } else if (lod == 3) {\\n        return texture(volume3, p/volumeSize + 0.5).rg;\\n    } else if (lod == 4) {\\n        return texture(volume4, p/volumeSize + 0.5).rg;\\n    } else if (lod == 5) {\\n        return texture(volume5, p/volumeSize + 0.5).rg;\\n    } else if (lod == 6) {\\n        return texture(volume6, p/volumeSize + 0.5).rg;\\n    } else if (lod == 7) {\\n        return texture(volume7, p/volumeSize + 0.5).rg;\\n    } else if (lod == 8) {\\n        return texture(volume8, p/volumeSize + 0.5).rg;\\n    } else {\\n        return texture(volume9, p/volumeSize + 0.5).rg;\\n    }\\n}\\n\\nfloat sampleSdf(vec3 p) {\\n    return texture(sdf, p/volumeSize + 0.5).r * 255.0 / 10.0 - 5.0;;\\n}\\n\\nvoid calcNormalAndCurv(vec3 p, out vec3 normal, out float curv) {\\n    float h = 0.01; \\n    vec2 k = h * vec2(1., 0.);\\n\\n    float t1 = sampleSdf(p + volumeSize*k.xyy); float t2 = sampleSdf(p - volumeSize*k.xyy);\\n    float t3 = sampleSdf(p + volumeSize*k.yxy); float t4 = sampleSdf(p - volumeSize*k.yxy);\\n    float t5 = sampleSdf(p + volumeSize*k.yxx); float t6 = sampleSdf(p - volumeSize*k.yxx);\\n\\n    curv = (t1+t2+t3+t4+t5+t6-6.0*sampleSdf(p))/(h*h);\\n    normal = normalize(k.xyy * (t1-t2) + k.yxy * (t3-t4) + k.yyx * (t5-t6));\\n}\\n\\n\\nvoid main()\\n{\\n    float normalizedDepth = texture(texDepth, gl_FragCoord.xy / resolution).r;\\n    vec4 ndc = vec4(gl_FragCoord.xy / resolution * 2.0 - 1.0,\\n                    normalizedDepth * 2.0 - 1.0, 1.0f);\\n\\n    vec4 vcoords = inverse(proj) * ndc;\\n    vcoords /= vcoords.w;\\n    float depth = -vcoords.z;\\n\\n    vec3 rayDir = normalize( vDirection );\\n    vec2 boxDst = rayBoxDst(-0.5 * volumeSize, 0.5 * volumeSize, vOrigin, rayDir);\\n\\n    // Render render isosurface\\n    vec4 surfaceColor = vec4(0.0f);\\n    vec4 proteinColor = vec4(0.0f);\\n    \\n    if (displayCompartments) {\\n        vec3 rayPos = vOrigin + boxDst.x * rayDir;\\n        float dist = 0.0;\\n        while (dist < boxDst.y) {\\n            if (dist + boxDst.x > depth) break;\\n            // Simple sphere tracer.            \\n            float sdfVal = sampleSdf(rayPos);\\n            \\n            if (sdfVal < 0.01) {\\n                float curv;\\n                vec3 normal;\\n                calcNormalAndCurv(rayPos, normal, curv);\\n                float ldn = dot(normal, vec3(1.0, 0.0, 0.0));\\n                surfaceColor = mix(vec4(0.0, 0.0, 0.0, 1.0), vec4(colormap(abs(0.00001*curv)), 1.0), 0.5 + 0.5 * ldn);\\n                break;\\n            }\\n\\n            dist += sdfVal;\\n            rayPos += sdfVal * rayDir;\\n        }\\n        depth = min(depth, boxDst.x + dist);\\n    }\\n\\n    // Render volume.\\n    float steps = 0.0;\\n    vec3 rayPos = vOrigin + boxDst.x * rayDir;\\n\\n    float baseStepSize = 0.25;\\n    float dist = 0.0;\\n\\n    // This works better than an if statement for some reason (at least on Intel GPUs)\\n    float dstToMarch = float(displayProtein)*boxDst.y;\\n\\n    while (dist < dstToMarch) {\\n        float sdfVal = sampleSdf(rayPos);\\n\\n        float stepSize = baseStepSize;\\n        if (sdfVal < isovalue) {\\n            int lod = 0;\\n            \\n            if (useLod) {\\n                if (dist + boxDst.x < 40.0) {\\n                    lod = 0;\\n                    stepSize = baseStepSize;\\n                } else if (dist + boxDst.x < 80.0) {\\n                    lod = 1;\\n                    stepSize = baseStepSize * 2.0;\\n                } else if (dist + boxDst.x < 160.0) {\\n                    lod = 2;\\n                    stepSize = baseStepSize * 4.0;\\n                } else {\\n                    lod = 3;\\n                    stepSize = baseStepSize * 8.0;\\n                }\\n            }\\n\\n            float density = 0.75 * sampleProtein(rayPos, lod).r;\\n            vec3 color = colormap(density);\\n\\n            vec3 uvw = rayPos / volumeSize + 0.5;\\n            float distanceToMaximum = clamp(1.0 - abs(uvw.z - texture(projection, uvw.xy).g) / 0.025, 0.0, 1.0);\\n            float selectionMask = texture(selection, uvw.xy).r;\\n\\n            float highlight = distanceToMaximum * selectionMask;\\n            color = mix(color, 3.0 * matlab_spring(density), highlight);\\n\\n            proteinColor.rgb += density * (1.0 - proteinColor.a) * color;\\n            proteinColor.a += density * (1.0 - proteinColor.a);\\n        }\\n\\n        dist += stepSize;\\n        rayPos += stepSize * rayDir;\\n\\n        steps += 1.0;\\n\\n        if (proteinColor.a > 0.99f) break;\\n        if (dist + boxDst.x > depth) break;\\n    }\\n\\n    if (debugSamples) {\\n        FragColor.rgb = matlab_spring(steps / 500.0);\\n        FragColor.a = 1.0;\\n    } else {\\n        FragColor.rgb = mix(surfaceColor.rgb, proteinColor.rgb, proteinColor.a);\\n        FragColor.a = max(surfaceColor.a, proteinColor.a);\\n    }\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"\\nvarying vec2 vUv;\\n\\nuniform sampler2D texGrid;\\nuniform sampler2D texVolume;\\n\\nvoid main() {\\n    gl_FragColor = vec4(mix(texture(texGrid, vUv).rgb, texture(texVolume, vUv).rgb, texture(texVolume, vUv).a), 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nuniform highp sampler3D volume;\\nuniform highp sampler3D sdf;\\nuniform float isovalue;\\n\\nvoid main() {\\n    vec3 uv = vec3(vUv, 0.0);\\n    int col = textureSize(volume, 0).z;\\n\\n    // Maximum projection.\\n    float maxDensity = 0.0;\\n    float maxPos = 0.0;\\n    for (float i = 0.0; i < float(col); i += 1.0) {\\n        uv.z = i / float(col);\\n        float sdfVal = texture(sdf, uv).r * 255.0 / 10.0 - 5.0 - isovalue;\\n        if (sdfVal <= 0.01) {\\n            float density = texture(volume, uv).r;\\n            if (density > maxDensity) {\\n                maxDensity = density;\\n                maxPos = uv.z;\\n            }\\n        }\\n    }\\n\\n    gl_FragColor = vec4(maxDensity, maxPos, 0.0, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nuniform bool clear;\\nuniform vec2 lastPosition;\\nuniform vec2 position;\\nuniform bool depressed;\\nuniform float resolution;\\nuniform int penMode;\\nuniform float penSize;\\nuniform sampler2D restore;\\nuniform bool doRestore;\\n\\n// https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\\n{\\n    vec2 pa = p-a, ba = b-a;\\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\\n    return length( pa - ba*h );\\n}\\n\\nvoid drawPixel() {\\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n}\\n\\nvoid erasePixel() {\\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n}\\n\\nvoid main()\\n{\\n    if (clear) {\\n        erasePixel();\\n        return;\\n    }\\n\\n    if (doRestore) {\\n        gl_FragColor = texture(restore, vUv);\\n        return;\\n    }\\n\\n    if (sdSegment(vUv, position, lastPosition) < penSize/resolution && depressed) {\\n        if (penMode == 0) {\\n            drawPixel();\\n        } else {\\n            erasePixel();\\n        }\\n    } else {\\n        discard;\\n    }\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","module.exports = \"varying vec2 vUv;\\n\\nuniform highp sampler2D projection;\\nuniform highp sampler2D selection;\\n\\n// https://github.com/kbinani/colormap-shaders/blob/master/shaders/glsl/MATLAB_summer.frag\\nvec4 colormap(float x) {\\n    return vec4(clamp(x, 0.0, 1.0), clamp(0.5 * x + 0.5, 0.0, 1.0), 0.4, 1.0);\\n}\\n\\nvoid main() {\\n    vec4 c1 = colormap(texture(projection, vUv).r);\\n    vec4 c2 = texture(selection, vUv);\\n\\n    gl_FragColor = mix(0.5*c1, c1, c2.r);\\n    //gl_FragColor = vec4(vUv.x, vUv.y, 0.0, 1.0);\\n}\"","import React from 'react';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nimport Main from './components/Main';\n\nfunction App() {\n  return(\n      <div className=\"App\">\n        <Main />\n     </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}